// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

import { instanceToPlain, plainToClassFromExist } from 'class-transformer';
import { Serializable } from '@internal/interfaces/serializable';

export class RepayReq implements Serializable {
    /**
     * currency
     */
    currency: string;

    /**
     * Borrow amount
     */
    size: number;

    /**
     * symbol, mandatory for isolated margin account
     */
    symbol?: string;

    /**
     * true-isolated, false-cross; default is false
     */
    isIsolated?: boolean = false;

    /**
     * true: high frequency borrowing, false: low frequency borrowing; default false
     */
    isHf?: boolean = false;

    /**
     * Private constructor, please use the corresponding static methods to construct the object.
     */
    private constructor() {
        // @ts-ignore
        this.currency = null;
        // @ts-ignore
        this.size = null;
    }
    /**
     * Creates a new instance of the `RepayReq` class.
     * The builder pattern allows step-by-step construction of a `RepayReq` object.
     */
    static builder(): RepayReqBuilder {
        return new RepayReqBuilder(new RepayReq());
    }

    /**
     * Creates a new instance of the `RepayReq` class with the given data.
     */
    static create(data: {
        /**
         * currency
         */
        currency: string;
        /**
         * Borrow amount
         */
        size: number;
        /**
         * symbol, mandatory for isolated margin account
         */
        symbol?: string;
        /**
         * true-isolated, false-cross; default is false
         */
        isIsolated?: boolean;
        /**
         * true: high frequency borrowing, false: low frequency borrowing; default false
         */
        isHf?: boolean;
    }): RepayReq {
        let obj = new RepayReq();
        obj.currency = data.currency;
        obj.size = data.size;
        obj.symbol = data.symbol;
        if (data.isIsolated) {
            obj.isIsolated = data.isIsolated;
        } else {
            obj.isIsolated = false;
        }
        if (data.isHf) {
            obj.isHf = data.isHf;
        } else {
            obj.isHf = false;
        }
        return obj;
    }

    /**
     * Convert the object to a JSON string.
     */
    toJson(): string {
        return JSON.stringify(instanceToPlain(this));
    }
    /**
     * Create an object from a JSON string.
     */
    static fromJson(input: string): RepayReq {
        return this.fromObject(JSON.parse(input));
    }
    /**
     * Create an object from Js Object.
     */
    static fromObject(jsonObject: Object): RepayReq {
        return plainToClassFromExist(new RepayReq(), jsonObject);
    }
}

export class RepayReqBuilder {
    constructor(readonly obj: RepayReq) {
        this.obj = obj;
    }
    /**
     * currency
     */
    setCurrency(value: string): RepayReqBuilder {
        this.obj.currency = value;
        return this;
    }

    /**
     * Borrow amount
     */
    setSize(value: number): RepayReqBuilder {
        this.obj.size = value;
        return this;
    }

    /**
     * symbol, mandatory for isolated margin account
     */
    setSymbol(value: string): RepayReqBuilder {
        this.obj.symbol = value;
        return this;
    }

    /**
     * true-isolated, false-cross; default is false
     */
    setIsIsolated(value: boolean): RepayReqBuilder {
        this.obj.isIsolated = value;
        return this;
    }

    /**
     * true: high frequency borrowing, false: low frequency borrowing; default false
     */
    setIsHf(value: boolean): RepayReqBuilder {
        this.obj.isHf = value;
        return this;
    }

    /**
     * Get the final object.
     */
    build(): RepayReq {
        return this.obj;
    }
}
