// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

import { instanceToPlain, plainToInstance } from 'class-transformer';
import { Serializable } from '@internal/interfaces/serializable';

export class GetPurchaseOrdersReq implements Serializable<GetPurchaseOrdersReq> {
    /**
     * currency
     */
    currency?: string;
    /**
     * DONE-completed; PENDING-settling
     */
    status?: GetPurchaseOrdersReq.StatusEnum;
    /**
     *
     */
    purchaseOrderNo?: string;
    /**
     * Current page; default is 1
     */
    currentPage?: number = 1;
    /**
     * Page size; 1<=pageSize<=100; default is 50
     */
    pageSize?: number = 50;

    /**
     * Creates a new instance of the `GetPurchaseOrdersReq` class.
     * The builder pattern allows step-by-step construction of a `GetPurchaseOrdersReq` object.
     */
    static builder(): GetPurchaseOrdersReqBuilder {
        return new GetPurchaseOrdersReqBuilder();
    }

    /**
     * Creates a new instance of the `GetPurchaseOrdersReq` class with the given data.
     */
    static create(data: {
        /**
         * currency
         */
        currency?: string;
        /**
         * DONE-completed; PENDING-settling
         */
        status?: GetPurchaseOrdersReq.StatusEnum;
        /**
         *
         */
        purchaseOrderNo?: string;
        /**
         * Current page; default is 1
         */
        currentPage?: number;
        /**
         * Page size; 1<=pageSize<=100; default is 50
         */
        pageSize?: number;
    }): GetPurchaseOrdersReq {
        let obj = new GetPurchaseOrdersReq();
        obj.currency = data.currency;
        obj.status = data.status;
        obj.purchaseOrderNo = data.purchaseOrderNo;
        obj.currentPage = data.currentPage;
        obj.pageSize = data.pageSize;
        return obj;
    }

    fromJson(input: string): GetPurchaseOrdersReq {
        const jsonObject = JSON.parse(input);
        return plainToInstance(GetPurchaseOrdersReq, jsonObject);
    }

    toJson(): string {
        return JSON.stringify(instanceToPlain(this));
    }

    fromObject(jsonObject: Object): GetPurchaseOrdersReq {
        return plainToInstance(GetPurchaseOrdersReq, jsonObject);
    }
}

export namespace GetPurchaseOrdersReq {
    export enum StatusEnum {
        /**
         *
         */
        DONE = <any>'DONE',
        /**
         *
         */
        PENDING = <any>'PENDING',
    }
}

export class GetPurchaseOrdersReqBuilder {
    obj: GetPurchaseOrdersReq = new GetPurchaseOrdersReq();
    /**
     * currency
     */
    setCurrency(value: string): GetPurchaseOrdersReqBuilder {
        this.obj.currency = value;
        return this;
    }

    /**
     * DONE-completed; PENDING-settling
     */
    setStatus(value: GetPurchaseOrdersReq.StatusEnum): GetPurchaseOrdersReqBuilder {
        this.obj.status = value;
        return this;
    }

    /**
     *
     */
    setPurchaseOrderNo(value: string): GetPurchaseOrdersReqBuilder {
        this.obj.purchaseOrderNo = value;
        return this;
    }

    /**
     * Current page; default is 1
     */
    setCurrentPage(value: number): GetPurchaseOrdersReqBuilder {
        this.obj.currentPage = value;
        return this;
    }

    /**
     * Page size; 1<=pageSize<=100; default is 50
     */
    setPageSize(value: number): GetPurchaseOrdersReqBuilder {
        this.obj.pageSize = value;
        return this;
    }

    build(): GetPurchaseOrdersReq {
        return this.obj;
    }
}
