// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

import { instanceToPlain, plainToInstance } from 'class-transformer';
import { Serializable } from '@internal/interfaces/serializable';

export class GetRedeemOrdersReq implements Serializable<GetRedeemOrdersReq> {
    /**
     * currency
     */
    currency?: string;
    /**
     * DONE-completed; PENDING-settling
     */
    status?: GetRedeemOrdersReq.StatusEnum;
    /**
     * Redeem order id
     */
    redeemOrderNo?: string;
    /**
     * Current page; default is 1
     */
    currentPage?: number = 1;
    /**
     * Page size; 1<=pageSize<=100; default is 50
     */
    pageSize?: number = 50;

    /**
     * Creates a new instance of the `GetRedeemOrdersReq` class.
     * The builder pattern allows step-by-step construction of a `GetRedeemOrdersReq` object.
     */
    static builder(): GetRedeemOrdersReqBuilder {
        return new GetRedeemOrdersReqBuilder();
    }

    /**
     * Creates a new instance of the `GetRedeemOrdersReq` class with the given data.
     */
    static create(data: {
        /**
         * currency
         */
        currency?: string;
        /**
         * DONE-completed; PENDING-settling
         */
        status?: GetRedeemOrdersReq.StatusEnum;
        /**
         * Redeem order id
         */
        redeemOrderNo?: string;
        /**
         * Current page; default is 1
         */
        currentPage?: number;
        /**
         * Page size; 1<=pageSize<=100; default is 50
         */
        pageSize?: number;
    }): GetRedeemOrdersReq {
        let obj = new GetRedeemOrdersReq();
        obj.currency = data.currency;
        obj.status = data.status;
        obj.redeemOrderNo = data.redeemOrderNo;
        obj.currentPage = data.currentPage;
        obj.pageSize = data.pageSize;
        return obj;
    }

    fromJson(input: string): GetRedeemOrdersReq {
        const jsonObject = JSON.parse(input);
        return plainToInstance(GetRedeemOrdersReq, jsonObject);
    }

    toJson(): string {
        return JSON.stringify(instanceToPlain(this));
    }

    fromObject(jsonObject: Object): GetRedeemOrdersReq {
        return plainToInstance(GetRedeemOrdersReq, jsonObject);
    }
}

export namespace GetRedeemOrdersReq {
    export enum StatusEnum {
        /**
         *
         */
        DONE = <any>'DONE',
        /**
         *
         */
        PENDING = <any>'PENDING',
    }
}

export class GetRedeemOrdersReqBuilder {
    obj: GetRedeemOrdersReq = new GetRedeemOrdersReq();
    /**
     * currency
     */
    setCurrency(value: string): GetRedeemOrdersReqBuilder {
        this.obj.currency = value;
        return this;
    }

    /**
     * DONE-completed; PENDING-settling
     */
    setStatus(value: GetRedeemOrdersReq.StatusEnum): GetRedeemOrdersReqBuilder {
        this.obj.status = value;
        return this;
    }

    /**
     * Redeem order id
     */
    setRedeemOrderNo(value: string): GetRedeemOrdersReqBuilder {
        this.obj.redeemOrderNo = value;
        return this;
    }

    /**
     * Current page; default is 1
     */
    setCurrentPage(value: number): GetRedeemOrdersReqBuilder {
        this.obj.currentPage = value;
        return this;
    }

    /**
     * Page size; 1<=pageSize<=100; default is 50
     */
    setPageSize(value: number): GetRedeemOrdersReqBuilder {
        this.obj.pageSize = value;
        return this;
    }

    build(): GetRedeemOrdersReq {
        return this.obj;
    }
}
