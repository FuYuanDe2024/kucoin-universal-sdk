// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

import { instanceToPlain, plainToInstance } from 'class-transformer';
import { Serializable } from '@internal/interfaces/serializable';
export class CancelAllOrdersBySymbolReq implements Serializable<CancelAllOrdersBySymbolReq> {
    /**
     * symbol
     */
    symbol?: string;
    /**
     * Transaction type: MARGIN_TRADE - cross margin trade, MARGIN_ISOLATED_TRADE - isolated margin trade
     */
    tradeType?: CancelAllOrdersBySymbolReq.TradeTypeEnum;

    /**
     * Creates a new instance of the `CancelAllOrdersBySymbolReq` class.
     * The builder pattern allows step-by-step construction of a `CancelAllOrdersBySymbolReq` object.
     */
    static builder(): CancelAllOrdersBySymbolReqBuilder {
        return new CancelAllOrdersBySymbolReqBuilder();
    }

    /**
     * Creates a new instance of the `CancelAllOrdersBySymbolReq` class with the given data.
     */
    static create(data: {
        /**
         * symbol
         */
        symbol?: string;
        /**
         * Transaction type: MARGIN_TRADE - cross margin trade, MARGIN_ISOLATED_TRADE - isolated margin trade
         */
        tradeType?: CancelAllOrdersBySymbolReq.TradeTypeEnum;
    }): CancelAllOrdersBySymbolReq {
        let obj = new CancelAllOrdersBySymbolReq();
        obj.symbol = data.symbol;
        obj.tradeType = data.tradeType;
        return obj;
    }

    fromJson(input: string): CancelAllOrdersBySymbolReq {
        const jsonObject = JSON.parse(input);
        return plainToInstance(CancelAllOrdersBySymbolReq, jsonObject);
    }

    toJson(): string {
        return JSON.stringify(instanceToPlain(this));
    }

    fromObject(jsonObject: Object): CancelAllOrdersBySymbolReq {
        return plainToInstance(CancelAllOrdersBySymbolReq, jsonObject);
    }
}

export namespace CancelAllOrdersBySymbolReq {
    export enum TradeTypeEnum {
        /**
         *
         */
        MARGIN_TRADE = <any>'MARGIN_TRADE',
        /**
         *
         */
        MARGIN_ISOLATED_TRADE = <any>'MARGIN_ISOLATED_TRADE',
    }
}

export class CancelAllOrdersBySymbolReqBuilder {
    obj: CancelAllOrdersBySymbolReq = new CancelAllOrdersBySymbolReq();
    /**
     * symbol
     */
    setSymbol(value: string): CancelAllOrdersBySymbolReqBuilder {
        this.obj.symbol = value;
        return this;
    }

    /**
     * Transaction type: MARGIN_TRADE - cross margin trade, MARGIN_ISOLATED_TRADE - isolated margin trade
     */
    setTradeType(
        value: CancelAllOrdersBySymbolReq.TradeTypeEnum,
    ): CancelAllOrdersBySymbolReqBuilder {
        this.obj.tradeType = value;
        return this;
    }

    build(): CancelAllOrdersBySymbolReq {
        return this.obj;
    }
}
