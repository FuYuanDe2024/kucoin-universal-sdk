// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

import { instanceToPlain, plainToInstance } from 'class-transformer';
import { Serializable } from '@internal/interfaces/serializable';

export class GetTradeHistoryItems implements Serializable<GetTradeHistoryItems> {
    /**
     * Id of transaction detail
     */
    id?: number;
    /**
     * symbol
     */
    symbol?: string;
    /**
     * Trade Id, symbol latitude increment
     */
    tradeId?: number;
    /**
     * The unique order id generated by the trading system
     */
    orderId?: string;
    /**
     * Counterparty order Id
     */
    counterOrderId?: string;
    /**
     * Buy or sell
     */
    side?: GetTradeHistoryItems.SideEnum;
    /**
     * Liquidity type: taker or maker
     */
    liquidity?: GetTradeHistoryItems.LiquidityEnum;
    /**
     *
     */
    forceTaker?: boolean;
    /**
     * Order price
     */
    price?: string;
    /**
     * Order size
     */
    size?: string;
    /**
     * Order Funds
     */
    funds?: string;
    /**
     * [Handling fees](https://www.kucoin.com/docs-new/api-5327739)
     */
    fee?: string;
    /**
     * Fee rate
     */
    feeRate?: string;
    /**
     * currency used to calculate trading fee
     */
    feeCurrency?: string;
    /**
     * Take Profit and Stop Loss type, currently HFT does not support the Take Profit and Stop Loss type, so it is empty
     */
    stop?: string;
    /**
     * Trade type, redundancy param
     */
    tradeType?: string;
    /**
     * Users in some regions need query this field
     */
    tax?: string;
    /**
     * Tax Rate, Users in some regions need query this field
     */
    taxRate?: string;
    /**
     * Specify if the order is an \'limit\' order or \'market\' order.
     */
    type?: GetTradeHistoryItems.TypeEnum;
    /**
     *
     */
    createdAt?: number;

    fromJson(input: string): GetTradeHistoryItems {
        const jsonObject = JSON.parse(input);
        return plainToInstance(GetTradeHistoryItems, jsonObject);
    }

    toJson(): string {
        return JSON.stringify(instanceToPlain(this));
    }

    fromObject(jsonObject: Object): GetTradeHistoryItems {
        return plainToInstance(GetTradeHistoryItems, jsonObject);
    }
}

export namespace GetTradeHistoryItems {
    export enum SideEnum {
        /**
         *
         */
        BUY = <any>'buy',
        /**
         *
         */
        SELL = <any>'sell',
    }
    export enum LiquidityEnum {
        /**
         *
         */
        TAKER = <any>'taker',
        /**
         *
         */
        MAKER = <any>'maker',
    }
    export enum TypeEnum {
        /**
         *
         */
        LIMIT = <any>'limit',
        /**
         *
         */
        MARKET = <any>'market',
    }
}
