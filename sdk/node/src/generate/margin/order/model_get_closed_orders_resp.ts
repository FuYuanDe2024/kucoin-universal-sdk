// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

import { Type, instanceToPlain, Exclude, plainToClassFromExist } from 'class-transformer';
import { GetClosedOrdersItems } from './model_get_closed_orders_items';
import { RestResponse } from '@model/common';
import { Response } from '@internal/interfaces/serializable';

export class GetClosedOrdersResp implements Response<RestResponse> {
    /**
     * The id of the last set of data from the previous batch of data. By default, the latest information is given. lastId is used to filter data and paginate. If lastId is not entered, the default is a maximum of 100 returned data items. The return results include lastIdï¼Œwhich can be used as a query parameter to look up new data from the next page.
     */
    lastId: number;

    /**
     *
     */
    @Type(() => GetClosedOrdersItems)
    items: Array<GetClosedOrdersItems>;

    private constructor() {
        // @ts-ignore
        this.lastId = null;
        // @ts-ignore
        this.items = null;
    }
    /**
     * common response
     */
    @Exclude()
    commonResponse?: RestResponse;

    setCommonResponse(response: RestResponse): void {
        this.commonResponse = response;
    }

    toJson(): string {
        return JSON.stringify(instanceToPlain(this));
    }

    static fromJson(input: string): GetClosedOrdersResp {
        return this.fromObject(JSON.parse(input));
    }

    static fromObject(jsonObject: Object): GetClosedOrdersResp {
        return plainToClassFromExist(new GetClosedOrdersResp(), jsonObject);
    }
}
