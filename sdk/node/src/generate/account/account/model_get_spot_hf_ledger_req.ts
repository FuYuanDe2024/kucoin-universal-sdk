// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

import { instanceToPlain, plainToInstance } from 'class-transformer';
import { Serializable } from '@internal/interfaces/serializable';
export class GetSpotHFLedgerReq implements Serializable<GetSpotHFLedgerReq> {
    /**
     * Currency ( you can choose more than one currency). You can specify 10 currencies at most for one time. If not specified, all currencies will be inquired by default.
     */
    currency?: string;
    /**
     * direction: in, out
     */
    direction?: GetSpotHFLedgerReq.DirectionEnum;
    /**
     * Transaction type: TRANSFER-transfer funds,TRADE_EXCHANGE-Trade
     */
    bizType?: GetSpotHFLedgerReq.BizTypeEnum;
    /**
     * The id of the last set of data from the previous batch of data. By default, the latest information is given.
     */
    lastId?: number;
    /**
     * Default100，Max200
     */
    limit?: number = 100;
    /**
     * Start time (milisecond)
     */
    startAt?: number;
    /**
     * End time (milisecond)
     */
    endAt?: number;

    /**
     * Creates a new instance of the `GetSpotHFLedgerReq` class.
     * The builder pattern allows step-by-step construction of a `GetSpotHFLedgerReq` object.
     */
    static builder(): GetSpotHFLedgerReqBuilder {
        return new GetSpotHFLedgerReqBuilder();
    }

    /**
     * Creates a new instance of the `GetSpotHFLedgerReq` class with the given data.
     */
    static create(data: {
        /**
         * Currency ( you can choose more than one currency). You can specify 10 currencies at most for one time. If not specified, all currencies will be inquired by default.
         */
        currency?: string;
        /**
         * direction: in, out
         */
        direction?: GetSpotHFLedgerReq.DirectionEnum;
        /**
         * Transaction type: TRANSFER-transfer funds,TRADE_EXCHANGE-Trade
         */
        bizType?: GetSpotHFLedgerReq.BizTypeEnum;
        /**
         * The id of the last set of data from the previous batch of data. By default, the latest information is given.
         */
        lastId?: number;
        /**
         * Default100，Max200
         */
        limit?: number;
        /**
         * Start time (milisecond)
         */
        startAt?: number;
        /**
         * End time (milisecond)
         */
        endAt?: number;
    }): GetSpotHFLedgerReq {
        let obj = new GetSpotHFLedgerReq();
        obj.currency = data.currency;
        obj.direction = data.direction;
        obj.bizType = data.bizType;
        obj.lastId = data.lastId;
        obj.limit = data.limit;
        obj.startAt = data.startAt;
        obj.endAt = data.endAt;
        return obj;
    }

    fromJson(input: string): GetSpotHFLedgerReq {
        const jsonObject = JSON.parse(input);
        return plainToInstance(GetSpotHFLedgerReq, jsonObject);
    }

    toJson(): string {
        return JSON.stringify(instanceToPlain(this));
    }

    fromObject(jsonObject: Object): GetSpotHFLedgerReq {
        return plainToInstance(GetSpotHFLedgerReq, jsonObject);
    }
}

export namespace GetSpotHFLedgerReq {
    export enum DirectionEnum {
        /**
         *
         */
        _IN = <any>'in',
        /**
         *
         */
        OUT = <any>'out',
    }
    export enum BizTypeEnum {
        /**
         *
         */
        TRADE_EXCHANGE = <any>'TRADE_EXCHANGE',
        /**
         *
         */
        TRANSFER = <any>'TRANSFER',
    }
}

export class GetSpotHFLedgerReqBuilder {
    obj: GetSpotHFLedgerReq = new GetSpotHFLedgerReq();
    /**
     * Currency ( you can choose more than one currency). You can specify 10 currencies at most for one time. If not specified, all currencies will be inquired by default.
     */
    setCurrency(value: string): GetSpotHFLedgerReqBuilder {
        this.obj.currency = value;
        return this;
    }

    /**
     * direction: in, out
     */
    setDirection(value: GetSpotHFLedgerReq.DirectionEnum): GetSpotHFLedgerReqBuilder {
        this.obj.direction = value;
        return this;
    }

    /**
     * Transaction type: TRANSFER-transfer funds,TRADE_EXCHANGE-Trade
     */
    setBizType(value: GetSpotHFLedgerReq.BizTypeEnum): GetSpotHFLedgerReqBuilder {
        this.obj.bizType = value;
        return this;
    }

    /**
     * The id of the last set of data from the previous batch of data. By default, the latest information is given.
     */
    setLastId(value: number): GetSpotHFLedgerReqBuilder {
        this.obj.lastId = value;
        return this;
    }

    /**
     * Default100，Max200
     */
    setLimit(value: number): GetSpotHFLedgerReqBuilder {
        this.obj.limit = value;
        return this;
    }

    /**
     * Start time (milisecond)
     */
    setStartAt(value: number): GetSpotHFLedgerReqBuilder {
        this.obj.startAt = value;
        return this;
    }

    /**
     * End time (milisecond)
     */
    setEndAt(value: number): GetSpotHFLedgerReqBuilder {
        this.obj.endAt = value;
        return this;
    }

    build(): GetSpotHFLedgerReq {
        return this.obj;
    }
}
