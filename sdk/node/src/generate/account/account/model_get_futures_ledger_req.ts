// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

import { instanceToPlain, plainToInstance } from 'class-transformer';
import { Serializable } from '@internal/interfaces/serializable';

export class GetFuturesLedgerReq implements Serializable<GetFuturesLedgerReq> {
    /**
     * Currency of transaction history, XBT or USDT
     */
    currency?: string;
    /**
     * Type RealisedPNL-Realised profit and loss, Deposit-Deposit, Withdrawal-withdraw, Transferin-Transfer in, TransferOut-Transfer out
     */
    type?: string;
    /**
     * Start offset. Generally, the only attribute of the last returned result of the previous request is used, and the first page is returned by default
     */
    offset?: number;
    /**
     * This parameter functions to judge whether the lookup is forward or not. True means “yes” and False means “no”. This parameter is set as true by default
     */
    forward?: boolean = true;
    /**
     * Displayed size per page. The default size is 50
     */
    maxCount?: number = 50;
    /**
     * Start time (milisecond)
     */
    startAt?: number;
    /**
     * End time (milisecond)
     */
    endAt?: number;

    /**
     * Creates a new instance of the `GetFuturesLedgerReq` class.
     * The builder pattern allows step-by-step construction of a `GetFuturesLedgerReq` object.
     */
    static builder(): GetFuturesLedgerReqBuilder {
        return new GetFuturesLedgerReqBuilder();
    }

    /**
     * Creates a new instance of the `GetFuturesLedgerReq` class with the given data.
     */
    static create(data: {
        /**
         * Currency of transaction history, XBT or USDT
         */
        currency?: string;
        /**
         * Type RealisedPNL-Realised profit and loss, Deposit-Deposit, Withdrawal-withdraw, Transferin-Transfer in, TransferOut-Transfer out
         */
        type?: string;
        /**
         * Start offset. Generally, the only attribute of the last returned result of the previous request is used, and the first page is returned by default
         */
        offset?: number;
        /**
         * This parameter functions to judge whether the lookup is forward or not. True means “yes” and False means “no”. This parameter is set as true by default
         */
        forward?: boolean;
        /**
         * Displayed size per page. The default size is 50
         */
        maxCount?: number;
        /**
         * Start time (milisecond)
         */
        startAt?: number;
        /**
         * End time (milisecond)
         */
        endAt?: number;
    }): GetFuturesLedgerReq {
        let obj = new GetFuturesLedgerReq();
        obj.currency = data.currency;
        obj.type = data.type;
        obj.offset = data.offset;
        obj.forward = data.forward;
        obj.maxCount = data.maxCount;
        obj.startAt = data.startAt;
        obj.endAt = data.endAt;
        return obj;
    }

    fromJson(input: string): GetFuturesLedgerReq {
        const jsonObject = JSON.parse(input);
        return plainToInstance(GetFuturesLedgerReq, jsonObject);
    }

    toJson(): string {
        return JSON.stringify(instanceToPlain(this));
    }

    fromObject(jsonObject: Object): GetFuturesLedgerReq {
        return plainToInstance(GetFuturesLedgerReq, jsonObject);
    }
}

export class GetFuturesLedgerReqBuilder {
    obj: GetFuturesLedgerReq = new GetFuturesLedgerReq();
    /**
     * Currency of transaction history, XBT or USDT
     */
    setCurrency(value: string): GetFuturesLedgerReqBuilder {
        this.obj.currency = value;
        return this;
    }

    /**
     * Type RealisedPNL-Realised profit and loss, Deposit-Deposit, Withdrawal-withdraw, Transferin-Transfer in, TransferOut-Transfer out
     */
    setType(value: string): GetFuturesLedgerReqBuilder {
        this.obj.type = value;
        return this;
    }

    /**
     * Start offset. Generally, the only attribute of the last returned result of the previous request is used, and the first page is returned by default
     */
    setOffset(value: number): GetFuturesLedgerReqBuilder {
        this.obj.offset = value;
        return this;
    }

    /**
     * This parameter functions to judge whether the lookup is forward or not. True means “yes” and False means “no”. This parameter is set as true by default
     */
    setForward(value: boolean): GetFuturesLedgerReqBuilder {
        this.obj.forward = value;
        return this;
    }

    /**
     * Displayed size per page. The default size is 50
     */
    setMaxCount(value: number): GetFuturesLedgerReqBuilder {
        this.obj.maxCount = value;
        return this;
    }

    /**
     * Start time (milisecond)
     */
    setStartAt(value: number): GetFuturesLedgerReqBuilder {
        this.obj.startAt = value;
        return this;
    }

    /**
     * End time (milisecond)
     */
    setEndAt(value: number): GetFuturesLedgerReqBuilder {
        this.obj.endAt = value;
        return this;
    }

    build(): GetFuturesLedgerReq {
        return this.obj;
    }
}
