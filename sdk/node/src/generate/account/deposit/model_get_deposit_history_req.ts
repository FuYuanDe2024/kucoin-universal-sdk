// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

import { instanceToPlain, plainToInstance } from 'class-transformer';
import { Serializable } from '@internal/interfaces/serializable';
export class GetDepositHistoryReq implements Serializable<GetDepositHistoryReq> {
    /**
     * currency
     */
    currency?: string;
    /**
     * Status. Available value: PROCESSING, SUCCESS, and FAILURE
     */
    status?: GetDepositHistoryReq.StatusEnum;
    /**
     * Start time (milisecond)
     */
    startAt?: number;
    /**
     * End time (milisecond)
     */
    endAt?: number;
    /**
     * Current request page.
     */
    currentPage?: number;
    /**
     * Number of results per request. Minimum is 10, maximum is 500.
     */
    pageSize?: number = 50;

    /**
     * Creates a new instance of the `GetDepositHistoryReq` class.
     * The builder pattern allows step-by-step construction of a `GetDepositHistoryReq` object.
     */
    static builder(): GetDepositHistoryReqBuilder {
        return new GetDepositHistoryReqBuilder();
    }

    /**
     * Creates a new instance of the `GetDepositHistoryReq` class with the given data.
     */
    static create(data: {
        /**
         * currency
         */
        currency?: string;
        /**
         * Status. Available value: PROCESSING, SUCCESS, and FAILURE
         */
        status?: GetDepositHistoryReq.StatusEnum;
        /**
         * Start time (milisecond)
         */
        startAt?: number;
        /**
         * End time (milisecond)
         */
        endAt?: number;
        /**
         * Current request page.
         */
        currentPage?: number;
        /**
         * Number of results per request. Minimum is 10, maximum is 500.
         */
        pageSize?: number;
    }): GetDepositHistoryReq {
        let obj = new GetDepositHistoryReq();
        obj.currency = data.currency;
        obj.status = data.status;
        obj.startAt = data.startAt;
        obj.endAt = data.endAt;
        obj.currentPage = data.currentPage;
        obj.pageSize = data.pageSize;
        return obj;
    }

    fromJson(input: string): GetDepositHistoryReq {
        const jsonObject = JSON.parse(input);
        return plainToInstance(GetDepositHistoryReq, jsonObject);
    }

    toJson(): string {
        return JSON.stringify(instanceToPlain(this));
    }

    fromObject(jsonObject: Object): GetDepositHistoryReq {
        return plainToInstance(GetDepositHistoryReq, jsonObject);
    }
}

export namespace GetDepositHistoryReq {
    export enum StatusEnum {
        /**
         *
         */
        PROCESSING = <any>'PROCESSING',
        /**
         *
         */
        SUCCESS = <any>'SUCCESS',
        /**
         *
         */
        FAILURE = <any>'FAILURE',
    }
}

export class GetDepositHistoryReqBuilder {
    obj: GetDepositHistoryReq = new GetDepositHistoryReq();
    /**
     * currency
     */
    setCurrency(value: string): GetDepositHistoryReqBuilder {
        this.obj.currency = value;
        return this;
    }

    /**
     * Status. Available value: PROCESSING, SUCCESS, and FAILURE
     */
    setStatus(value: GetDepositHistoryReq.StatusEnum): GetDepositHistoryReqBuilder {
        this.obj.status = value;
        return this;
    }

    /**
     * Start time (milisecond)
     */
    setStartAt(value: number): GetDepositHistoryReqBuilder {
        this.obj.startAt = value;
        return this;
    }

    /**
     * End time (milisecond)
     */
    setEndAt(value: number): GetDepositHistoryReqBuilder {
        this.obj.endAt = value;
        return this;
    }

    /**
     * Current request page.
     */
    setCurrentPage(value: number): GetDepositHistoryReqBuilder {
        this.obj.currentPage = value;
        return this;
    }

    /**
     * Number of results per request. Minimum is 10, maximum is 500.
     */
    setPageSize(value: number): GetDepositHistoryReqBuilder {
        this.obj.pageSize = value;
        return this;
    }

    build(): GetDepositHistoryReq {
        return this.obj;
    }
}
