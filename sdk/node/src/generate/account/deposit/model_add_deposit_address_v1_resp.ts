// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

import { instanceToPlain, Exclude, plainToClassFromExist } from 'class-transformer';
import { RestResponse } from '@model/common';
import { Response } from '@internal/interfaces/serializable';

export class AddDepositAddressV1Resp implements Response<RestResponse> {
    /**
     * Deposit address
     */
    address: string;

    /**
     * Address remark. If thereâ€™s no remark, it is empty. When you withdraw from other platforms to the KuCoin, you need to fill in memo(tag). If you do not fill memo (tag), your deposit may not be available, please be cautious.
     */
    memo: string;

    /**
     * The chainName of currency
     */
    chain: string;

    /**
     * The chainId of currency
     */
    chainId: string;

    /**
     * Deposit account type: main (funding account), trade (spot trading account)
     */
    to: AddDepositAddressV1Resp.ToEnum;

    /**
     * currency
     */
    currency: string;

    private constructor() {
        // @ts-ignore
        this.address = null;
        // @ts-ignore
        this.memo = null;
        // @ts-ignore
        this.chain = null;
        // @ts-ignore
        this.chainId = null;
        // @ts-ignore
        this.to = null;
        // @ts-ignore
        this.currency = null;
    }
    /**
     * common response
     */
    @Exclude()
    commonResponse?: RestResponse;

    setCommonResponse(response: RestResponse): void {
        this.commonResponse = response;
    }

    toJson(): string {
        return JSON.stringify(instanceToPlain(this));
    }

    static fromJson(input: string): AddDepositAddressV1Resp {
        return this.fromObject(JSON.parse(input));
    }

    static fromObject(jsonObject: Object): AddDepositAddressV1Resp {
        return plainToClassFromExist(new AddDepositAddressV1Resp(), jsonObject);
    }
}

export namespace AddDepositAddressV1Resp {
    export enum ToEnum {
        /**
         *
         */
        MAIN = <any>'MAIN',
        /**
         *
         */
        TRADE = <any>'TRADE',
    }
}
