// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

import { instanceToPlain, plainToInstance } from 'class-transformer';
import { Serializable } from '@internal/interfaces/serializable';
export class FuturesAccountTransferOutReq implements Serializable<FuturesAccountTransferOutReq> {
    /**
     * Currency, including XBT,USDT...
     */
    currency?: string;
    /**
     * Amount to be transfered out, the maximum cannot exceed 1000000000
     */
    amount?: number;
    /**
     * Receive account type, including MAIN,TRADE
     */
    recAccountType?: FuturesAccountTransferOutReq.RecAccountTypeEnum;

    /**
     * Creates a new instance of the `FuturesAccountTransferOutReq` class.
     * The builder pattern allows step-by-step construction of a `FuturesAccountTransferOutReq` object.
     */
    static builder(): FuturesAccountTransferOutReqBuilder {
        return new FuturesAccountTransferOutReqBuilder();
    }

    /**
     * Creates a new instance of the `FuturesAccountTransferOutReq` class with the given data.
     */
    static create(data: {
        /**
         * Currency, including XBT,USDT...
         */
        currency?: string;
        /**
         * Amount to be transfered out, the maximum cannot exceed 1000000000
         */
        amount?: number;
        /**
         * Receive account type, including MAIN,TRADE
         */
        recAccountType?: FuturesAccountTransferOutReq.RecAccountTypeEnum;
    }): FuturesAccountTransferOutReq {
        let obj = new FuturesAccountTransferOutReq();
        obj.currency = data.currency;
        obj.amount = data.amount;
        obj.recAccountType = data.recAccountType;
        return obj;
    }

    fromJson(input: string): FuturesAccountTransferOutReq {
        const jsonObject = JSON.parse(input);
        return plainToInstance(FuturesAccountTransferOutReq, jsonObject);
    }

    toJson(): string {
        return JSON.stringify(instanceToPlain(this));
    }

    fromObject(jsonObject: Object): FuturesAccountTransferOutReq {
        return plainToInstance(FuturesAccountTransferOutReq, jsonObject);
    }
}

export namespace FuturesAccountTransferOutReq {
    export enum RecAccountTypeEnum {
        /**
         *
         */
        MAIN = <any>'MAIN',
        /**
         *
         */
        TRADE = <any>'TRADE',
    }
}

export class FuturesAccountTransferOutReqBuilder {
    obj: FuturesAccountTransferOutReq = new FuturesAccountTransferOutReq();
    /**
     * Currency, including XBT,USDT...
     */
    setCurrency(value: string): FuturesAccountTransferOutReqBuilder {
        this.obj.currency = value;
        return this;
    }

    /**
     * Amount to be transfered out, the maximum cannot exceed 1000000000
     */
    setAmount(value: number): FuturesAccountTransferOutReqBuilder {
        this.obj.amount = value;
        return this;
    }

    /**
     * Receive account type, including MAIN,TRADE
     */
    setRecAccountType(
        value: FuturesAccountTransferOutReq.RecAccountTypeEnum,
    ): FuturesAccountTransferOutReqBuilder {
        this.obj.recAccountType = value;
        return this;
    }

    build(): FuturesAccountTransferOutReq {
        return this.obj;
    }
}
