// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

import { instanceToPlain, plainToClassFromExist } from 'class-transformer';
import { Serializable } from '@internal/interfaces/serializable';

export class GetOcoOrderListReq implements Serializable {
    /**
     * symbol
     */
    symbol?: string;

    /**
     * Start time (milliseconds)
     */
    startAt?: number;

    /**
     * End time (milliseconds)
     */
    endAt?: number;

    /**
     * Specify orderId collection, up to 500 orders
     */
    orderIds?: string;

    /**
     * Size per page, minimum value 10, maximum value 500
     */
    pageSize?: number = 50;

    /**
     * Page number, minimum value 1
     */
    currentPage?: number = 1;

    /**
     * Private constructor, please use the corresponding static methods to construct the object.
     */
    private constructor() {}
    /**
     * Creates a new instance of the `GetOcoOrderListReq` class.
     * The builder pattern allows step-by-step construction of a `GetOcoOrderListReq` object.
     */
    static builder(): GetOcoOrderListReqBuilder {
        return new GetOcoOrderListReqBuilder(new GetOcoOrderListReq());
    }

    /**
     * Creates a new instance of the `GetOcoOrderListReq` class with the given data.
     */
    static create(data: {
        /**
         * symbol
         */
        symbol?: string;
        /**
         * Start time (milliseconds)
         */
        startAt?: number;
        /**
         * End time (milliseconds)
         */
        endAt?: number;
        /**
         * Specify orderId collection, up to 500 orders
         */
        orderIds?: string;
        /**
         * Size per page, minimum value 10, maximum value 500
         */
        pageSize?: number;
        /**
         * Page number, minimum value 1
         */
        currentPage?: number;
    }): GetOcoOrderListReq {
        let obj = new GetOcoOrderListReq();
        obj.symbol = data.symbol;
        obj.startAt = data.startAt;
        obj.endAt = data.endAt;
        obj.orderIds = data.orderIds;
        if (data.pageSize) {
            obj.pageSize = data.pageSize;
        } else {
            obj.pageSize = 50;
        }
        if (data.currentPage) {
            obj.currentPage = data.currentPage;
        } else {
            obj.currentPage = 1;
        }
        return obj;
    }

    /**
     * Convert the object to a JSON string.
     */
    toJson(): string {
        return JSON.stringify(instanceToPlain(this));
    }
    /**
     * Create an object from a JSON string.
     */
    static fromJson(input: string): GetOcoOrderListReq {
        return this.fromObject(JSON.parse(input));
    }
    /**
     * Create an object from Js Object.
     */
    static fromObject(jsonObject: Object): GetOcoOrderListReq {
        return plainToClassFromExist(new GetOcoOrderListReq(), jsonObject);
    }
}

export class GetOcoOrderListReqBuilder {
    constructor(readonly obj: GetOcoOrderListReq) {
        this.obj = obj;
    }
    /**
     * symbol
     */
    setSymbol(value: string): GetOcoOrderListReqBuilder {
        this.obj.symbol = value;
        return this;
    }

    /**
     * Start time (milliseconds)
     */
    setStartAt(value: number): GetOcoOrderListReqBuilder {
        this.obj.startAt = value;
        return this;
    }

    /**
     * End time (milliseconds)
     */
    setEndAt(value: number): GetOcoOrderListReqBuilder {
        this.obj.endAt = value;
        return this;
    }

    /**
     * Specify orderId collection, up to 500 orders
     */
    setOrderIds(value: string): GetOcoOrderListReqBuilder {
        this.obj.orderIds = value;
        return this;
    }

    /**
     * Size per page, minimum value 10, maximum value 500
     */
    setPageSize(value: number): GetOcoOrderListReqBuilder {
        this.obj.pageSize = value;
        return this;
    }

    /**
     * Page number, minimum value 1
     */
    setCurrentPage(value: number): GetOcoOrderListReqBuilder {
        this.obj.currentPage = value;
        return this;
    }

    /**
     * Get the final object.
     */
    build(): GetOcoOrderListReq {
        return this.obj;
    }
}
