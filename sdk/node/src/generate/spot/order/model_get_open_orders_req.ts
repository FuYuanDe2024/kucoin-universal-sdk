// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

import { instanceToPlain, plainToInstance } from 'class-transformer';
import { Serializable } from '@internal/interfaces/serializable';
export class GetOpenOrdersReq implements Serializable<GetOpenOrdersReq> {
    /**
     * symbol
     */
    symbol?: string;

    /**
     * Creates a new instance of the `GetOpenOrdersReq` class.
     * The builder pattern allows step-by-step construction of a `GetOpenOrdersReq` object.
     */
    static builder(): GetOpenOrdersReqBuilder {
        return new GetOpenOrdersReqBuilder();
    }

    /**
     * Creates a new instance of the `GetOpenOrdersReq` class with the given data.
     */
    static create(data: {
        /**
         * symbol
         */
        symbol?: string;
    }): GetOpenOrdersReq {
        let obj = new GetOpenOrdersReq();
        obj.symbol = data.symbol;
        return obj;
    }

    fromJson(input: string): GetOpenOrdersReq {
        const jsonObject = JSON.parse(input);
        return plainToInstance(GetOpenOrdersReq, jsonObject);
    }

    toJson(): string {
        return JSON.stringify(instanceToPlain(this));
    }

    fromObject(jsonObject: Object): GetOpenOrdersReq {
        return plainToInstance(GetOpenOrdersReq, jsonObject);
    }
}

export class GetOpenOrdersReqBuilder {
    obj: GetOpenOrdersReq = new GetOpenOrdersReq();
    /**
     * symbol
     */
    setSymbol(value: string): GetOpenOrdersReqBuilder {
        this.obj.symbol = value;
        return this;
    }

    build(): GetOpenOrdersReq {
        return this.obj;
    }
}
