// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

import { instanceToPlain, plainToClassFromExist } from 'class-transformer';
import { Serializable } from '@internal/interfaces/serializable';

export class GetStopOrderByClientOidReq implements Serializable {
    /**
     * The client order id
     */
    clientOid?: string;

    /**
     * symbol name
     */
    symbol?: string;

    /**
     * Private constructor, please use the corresponding static methods to construct the object.
     */
    private constructor() {}
    /**
     * Creates a new instance of the `GetStopOrderByClientOidReq` class.
     * The builder pattern allows step-by-step construction of a `GetStopOrderByClientOidReq` object.
     */
    static builder(): GetStopOrderByClientOidReqBuilder {
        return new GetStopOrderByClientOidReqBuilder(new GetStopOrderByClientOidReq());
    }

    /**
     * Creates a new instance of the `GetStopOrderByClientOidReq` class with the given data.
     */
    static create(data: {
        /**
         * The client order id
         */
        clientOid?: string;
        /**
         * symbol name
         */
        symbol?: string;
    }): GetStopOrderByClientOidReq {
        let obj = new GetStopOrderByClientOidReq();
        obj.clientOid = data.clientOid;
        obj.symbol = data.symbol;
        return obj;
    }

    /**
     * Convert the object to a JSON string.
     */
    toJson(): string {
        return JSON.stringify(instanceToPlain(this));
    }
    /**
     * Create an object from a JSON string.
     */
    static fromJson(input: string): GetStopOrderByClientOidReq {
        return this.fromObject(JSON.parse(input));
    }
    /**
     * Create an object from Js Object.
     */
    static fromObject(jsonObject: Object): GetStopOrderByClientOidReq {
        return plainToClassFromExist(new GetStopOrderByClientOidReq(), jsonObject);
    }
}

export class GetStopOrderByClientOidReqBuilder {
    constructor(readonly obj: GetStopOrderByClientOidReq) {
        this.obj = obj;
    }
    /**
     * The client order id
     */
    setClientOid(value: string): GetStopOrderByClientOidReqBuilder {
        this.obj.clientOid = value;
        return this;
    }

    /**
     * symbol name
     */
    setSymbol(value: string): GetStopOrderByClientOidReqBuilder {
        this.obj.symbol = value;
        return this;
    }

    /**
     * Get the final object.
     */
    build(): GetStopOrderByClientOidReq {
        return this.obj;
    }
}
