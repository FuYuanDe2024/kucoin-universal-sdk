// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

import { Type, instanceToPlain, Exclude, plainToClassFromExist } from 'class-transformer';
import { CancelAllOrdersFailedSymbols } from './model_cancel_all_orders_failed_symbols';
import { RestResponse } from '@model/common';
import { Response } from '@internal/interfaces/serializable';

export class CancelAllOrdersResp implements Response<RestResponse> {
    /**
     * The Symbols Successfully cancelled
     */
    succeedSymbols: Array<string>;

    /**
     * The Symbols Failed to cancel
     */
    @Type(() => CancelAllOrdersFailedSymbols)
    failedSymbols: Array<CancelAllOrdersFailedSymbols>;

    /**
     * Private constructor, please use the corresponding static methods to construct the object.
     */
    private constructor() {
        // @ts-ignore
        this.succeedSymbols = null;
        // @ts-ignore
        this.failedSymbols = null;
    }
    /**
     * common response
     */
    @Exclude()
    commonResponse?: RestResponse;

    setCommonResponse(response: RestResponse): void {
        this.commonResponse = response;
    }

    /**
     * Convert the object to a JSON string.
     */
    toJson(): string {
        return JSON.stringify(instanceToPlain(this));
    }
    /**
     * Create an object from a JSON string.
     */
    static fromJson(input: string): CancelAllOrdersResp {
        return this.fromObject(JSON.parse(input));
    }
    /**
     * Create an object from Js Object.
     */
    static fromObject(jsonObject: Object): CancelAllOrdersResp {
        return plainToClassFromExist(new CancelAllOrdersResp(), jsonObject);
    }
}
