// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

import { instanceToPlain, Exclude, plainToInstance } from 'class-transformer';
import { WsMessage } from '@model/common';
import { WebSocketMessageCallback } from '@internal/interfaces/websocket';
import { Response } from '@internal/interfaces/response';
export class OrderbookLevel1Event implements Response<OrderbookLevel1Event, WsMessage> {
    /**
     * price, size
     */
    asks?: Array<string>;
    /**
     *
     */
    bids?: Array<string>;
    /**
     *
     */
    timestamp?: number;
    /**
     * common response
     */
    @Exclude()
    private commonResponse?: WsMessage;

    setCommonResponse(response: WsMessage): void {
        this.commonResponse = response;
    }

    fromJson(input: string): OrderbookLevel1Event {
        const jsonObject = JSON.parse(input);
        return plainToInstance(OrderbookLevel1Event, jsonObject);
    }

    toJson(): string {
        return JSON.stringify(instanceToPlain(this));
    }
    fromObject(jsonObject: Object): OrderbookLevel1Event {
        return plainToInstance(OrderbookLevel1Event, jsonObject);
    }
}

export type OrderbookLevel1EventCallback = (
    topic: string,
    subject: string,
    data: OrderbookLevel1Event,
) => void;

export class OrderbookLevel1EventCallbackWrapper implements WebSocketMessageCallback {
    callback: OrderbookLevel1EventCallback;

    constructor(callback: OrderbookLevel1EventCallback) {
        this.callback = callback;
    }

    onMessage(msg: WsMessage): void {
        let event = new OrderbookLevel1Event().fromObject(msg.rawData);
        event.setCommonResponse(msg);
        this.callback(msg.topic, msg.subject, event);
    }
}
