// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

import { instanceToPlain, Exclude, plainToClassFromExist } from 'class-transformer';
import { WsMessage } from '@model/common';
import { WebSocketMessageCallback } from '@internal/interfaces/websocket';
import { Response } from '@internal/interfaces/serializable';

export class KlinesEvent implements Response<WsMessage> {
    /**
     * symbol
     */
    symbol: string;
    /**
     * Start time of the candle cycle,open price,close price, high price,low price,Transaction volume,Transaction amount
     */
    candles: Array<string>;
    /**
     * now（us）
     */
    time: number;

    private constructor() {
        // @ts-ignore
        this.symbol = null;
        // @ts-ignore
        this.candles = null;
        // @ts-ignore
        this.time = null;
    }
    /**
     * common response
     */
    @Exclude()
    private commonResponse?: WsMessage;

    setCommonResponse(response: WsMessage): void {
        this.commonResponse = response;
    }

    toJson(): string {
        return JSON.stringify(instanceToPlain(this));
    }

    static fromJson(input: string): KlinesEvent {
        return this.fromObject(JSON.parse(input));
    }

    static fromObject(jsonObject: Object): KlinesEvent {
        return plainToClassFromExist(new KlinesEvent(), jsonObject);
    }
}

export type KlinesEventCallback = (topic: string, subject: string, data: KlinesEvent) => void;

export class KlinesEventCallbackWrapper implements WebSocketMessageCallback {
    constructor(private callback: KlinesEventCallback) {
        this.callback = callback;
    }

    onMessage(msg: WsMessage): void {
        let event = KlinesEvent.fromObject(msg.data);
        event.setCommonResponse(msg);
        this.callback(msg.topic, msg.subject, event);
    }
}
