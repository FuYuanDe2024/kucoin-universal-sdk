// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

import { instanceToPlain, plainToInstance } from 'class-transformer';
import { Serializable } from '@internal/interfaces/serializable';
export class GetAllTickersTicker implements Serializable<GetAllTickersTicker> {
    /**
     * Symbol
     */
    symbol?: string;
    /**
     * Name of trading pairs, it would change after renaming
     */
    symbolName?: string;
    /**
     * Best bid price
     */
    buy?: string;
    /**
     * Best bid size
     */
    bestBidSize?: string;
    /**
     * Best ask price
     */
    sell?: string;
    /**
     * Best ask size
     */
    bestAskSize?: string;
    /**
     * 24h change rate
     */
    changeRate?: string;
    /**
     * 24h change price
     */
    changePrice?: string;
    /**
     * Highest price in 24h
     */
    high?: string;
    /**
     * Lowest price in 24h
     */
    low?: string;
    /**
     * 24h volume, executed based on base currency
     */
    vol?: string;
    /**
     * 24h traded amount
     */
    volValue?: string;
    /**
     * Last traded price
     */
    last?: string;
    /**
     * Average trading price in the last 24 hours
     */
    averagePrice?: string;
    /**
     * Basic Taker Fee
     */
    takerFeeRate?: string;
    /**
     * Basic Maker Fee
     */
    makerFeeRate?: string;
    /**
     * The taker fee coefficient. The actual fee needs to be multiplied by this coefficient to get the final fee. Most currencies have a coefficient of 1. If set to 0, it means no fee
     */
    takerCoefficient?: GetAllTickersTicker.TakerCoefficientEnum;
    /**
     * The maker fee coefficient. The actual fee needs to be multiplied by this coefficient to get the final fee. Most currencies have a coefficient of 1. If set to 0, it means no fee
     */
    makerCoefficient?: GetAllTickersTicker.MakerCoefficientEnum;
    fromJson(input: string): GetAllTickersTicker {
        const jsonObject = JSON.parse(input);
        return plainToInstance(GetAllTickersTicker, jsonObject);
    }

    toJson(): string {
        return JSON.stringify(instanceToPlain(this));
    }

    fromObject(jsonObject: Object): GetAllTickersTicker {
        return plainToInstance(GetAllTickersTicker, jsonObject);
    }
}

export namespace GetAllTickersTicker {
    export enum TakerCoefficientEnum {
        /**
         * the taker fee coefficient is 1
         */
        _1 = <any>'1',
        /**
         * no fee
         */
        _0 = <any>'0',
    }
    export enum MakerCoefficientEnum {
        /**
         * the maker fee coefficient is 1
         */
        _1 = <any>'1',
        /**
         * no fee
         */
        _0 = <any>'0',
    }
}
