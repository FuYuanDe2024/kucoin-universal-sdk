// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

import { instanceToPlain, plainToClassFromExist } from 'class-transformer';
import { Serializable } from '@internal/interfaces/serializable';

export class GetPublicTokenInstanceServers implements Serializable {
    /**
     * Websocket domain URL, It is recommended to use a dynamic URL as the URL may change
     */
    endpoint: string;

    /**
     * Whether to encrypt. Currently only supports wss, not ws
     */
    encrypt: boolean;

    /**
     * Network Protocol
     */
    protocol: GetPublicTokenInstanceServers.ProtocolEnum;

    /**
     * Recommended ping interval(millisecond)
     */
    pingInterval: number;

    /**
     * Heartbeat timeout(millisecond)
     */
    pingTimeout: number;

    private constructor() {
        // @ts-ignore
        this.endpoint = null;
        // @ts-ignore
        this.encrypt = null;
        // @ts-ignore
        this.protocol = null;
        // @ts-ignore
        this.pingInterval = null;
        // @ts-ignore
        this.pingTimeout = null;
    }
    toJson(): string {
        return JSON.stringify(instanceToPlain(this));
    }

    static fromJson(input: string): GetPublicTokenInstanceServers {
        return this.fromObject(JSON.parse(input));
    }

    static fromObject(jsonObject: Object): GetPublicTokenInstanceServers {
        return plainToClassFromExist(new GetPublicTokenInstanceServers(), jsonObject);
    }
}

export namespace GetPublicTokenInstanceServers {
    export enum ProtocolEnum {
        /**
         * websocket
         */
        WEBSOCKET = <any>'websocket',
    }
}
