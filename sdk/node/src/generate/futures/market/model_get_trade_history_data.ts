// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

import { instanceToPlain, plainToInstance } from 'class-transformer';
import { Serializable } from '@internal/interfaces/serializable';

export class GetTradeHistoryData implements Serializable<GetTradeHistoryData> {
    /**
     * Sequence number
     */
    sequence?: number;
    /**
     * Deprecated param
     */
    contractId?: number;
    /**
     * Transaction ID
     */
    tradeId?: string;
    /**
     * Maker order ID
     */
    makerOrderId?: string;
    /**
     * Taker order ID
     */
    takerOrderId?: string;
    /**
     * Filled timestamp(nanosecond)
     */
    ts?: number;
    /**
     * Filled amount
     */
    size?: number;
    /**
     * Filled price
     */
    price?: string;
    /**
     * Filled side, The trade side indicates the taker order side. A taker order is the order that was matched with orders opened on the order book.
     */
    side?: GetTradeHistoryData.SideEnum;
    fromJson(input: string): GetTradeHistoryData {
        const jsonObject = JSON.parse(input);
        return plainToInstance(GetTradeHistoryData, jsonObject);
    }

    toJson(): string {
        return JSON.stringify(instanceToPlain(this));
    }

    fromObject(jsonObject: Object): GetTradeHistoryData {
        return plainToInstance(GetTradeHistoryData, jsonObject);
    }
}

export namespace GetTradeHistoryData {
    export enum SideEnum {
        /**
         * buy
         */
        BUY = <any>'buy',
        /**
         * sell
         */
        SELL = <any>'sell',
    }
}
