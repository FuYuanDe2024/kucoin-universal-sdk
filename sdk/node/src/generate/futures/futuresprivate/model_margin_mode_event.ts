// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

import { instanceToPlain, Exclude, plainToClassFromExist } from 'class-transformer';
import { WsMessage } from '@model/common';
import { WebSocketMessageCallback } from '@internal/interfaces/websocket';
import { Response } from '@internal/interfaces/serializable';

export class MarginModeEvent implements Response<WsMessage> {
    /**
     * The SYMBOL is the key with value  \"CROSS\" or \"ISOLATED\"
     */
    SYMBOL?: string;

    /**
     * common response
     */
    @Exclude()
    private commonResponse?: WsMessage;

    setCommonResponse(response: WsMessage): void {
        this.commonResponse = response;
    }

    toJson(): string {
        return JSON.stringify(instanceToPlain(this));
    }

    static fromJson(input: string): MarginModeEvent {
        return this.fromObject(JSON.parse(input));
    }

    static fromObject(jsonObject: Object): MarginModeEvent {
        return plainToClassFromExist(new MarginModeEvent(), jsonObject);
    }
}

export type MarginModeEventCallback = (
    topic: string,
    subject: string,
    data: MarginModeEvent,
) => void;

export class MarginModeEventCallbackWrapper implements WebSocketMessageCallback {
    constructor(private callback: MarginModeEventCallback) {
        this.callback = callback;
    }

    onMessage(msg: WsMessage): void {
        let event = MarginModeEvent.fromObject(msg.data);
        event.setCommonResponse(msg);
        this.callback(msg.topic, msg.subject, event);
    }
}
