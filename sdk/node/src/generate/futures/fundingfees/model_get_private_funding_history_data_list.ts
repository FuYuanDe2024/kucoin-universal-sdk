// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

import { instanceToPlain, plainToInstance } from 'class-transformer';
import { Serializable } from '@internal/interfaces/serializable';
export class GetPrivateFundingHistoryDataList
    implements Serializable<GetPrivateFundingHistoryDataList>
{
    /**
     * id
     */
    id?: number;
    /**
     * Symbol of the contract, Please refer to [Get Symbol endpoint: symbol](https://www.kucoin.com/docs-new/api-3470220)
     */
    symbol?: string;
    /**
     * Time point (milisecond)
     */
    timePoint?: number;
    /**
     * Funding rate
     */
    fundingRate?: number;
    /**
     * Mark price
     */
    markPrice?: number;
    /**
     * Position size
     */
    positionQty?: number;
    /**
     * Position value at settlement period
     */
    positionCost?: number;
    /**
     * Settled funding fees. A positive number means that the user received the funding fee, and vice versa.
     */
    funding?: number;
    /**
     * settlement currency
     */
    settleCurrency?: string;
    /**
     * context
     */
    context?: string;
    /**
     * Margin mode: ISOLATED (isolated), CROSS (cross margin).
     */
    marginMode?: GetPrivateFundingHistoryDataList.MarginModeEnum;
    fromJson(input: string): GetPrivateFundingHistoryDataList {
        const jsonObject = JSON.parse(input);
        return plainToInstance(GetPrivateFundingHistoryDataList, jsonObject);
    }

    toJson(): string {
        return JSON.stringify(instanceToPlain(this));
    }

    fromObject(jsonObject: Object): GetPrivateFundingHistoryDataList {
        return plainToInstance(GetPrivateFundingHistoryDataList, jsonObject);
    }
}

export namespace GetPrivateFundingHistoryDataList {
    export enum MarginModeEnum {
        /**
         * isolated margin
         */
        ISOLATED = <any>'ISOLATED',
        /**
         * cross margin
         */
        CROSS = <any>'CROSS',
    }
}
