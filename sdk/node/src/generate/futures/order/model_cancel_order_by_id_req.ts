// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

import { instanceToPlain, plainToInstance } from 'class-transformer';
import 'reflect-metadata';
import { Serializable } from '@internal/interfaces/serializable';
export class CancelOrderByIdReq implements Serializable<CancelOrderByIdReq> {
    /**
     *
     */
    @Reflect.metadata('path', 'orderId')
    orderId?: string;

    /**
     * Creates a new instance of the `CancelOrderByIdReq` class.
     * The builder pattern allows step-by-step construction of a `CancelOrderByIdReq` object.
     */
    static builder(): CancelOrderByIdReqBuilder {
        return new CancelOrderByIdReqBuilder();
    }

    /**
     * Creates a new instance of the `CancelOrderByIdReq` class with the given data.
     */
    static create(data: {
        /**
         *
         */
        orderId?: string;
    }): CancelOrderByIdReq {
        let obj = new CancelOrderByIdReq();
        obj.orderId = data.orderId;
        return obj;
    }

    fromJson(input: string): CancelOrderByIdReq {
        const jsonObject = JSON.parse(input);
        return plainToInstance(CancelOrderByIdReq, jsonObject);
    }

    toJson(): string {
        return JSON.stringify(instanceToPlain(this));
    }

    fromObject(jsonObject: Object): CancelOrderByIdReq {
        return plainToInstance(CancelOrderByIdReq, jsonObject);
    }
}

export class CancelOrderByIdReqBuilder {
    obj: CancelOrderByIdReq = new CancelOrderByIdReq();
    /**
     *
     */
    setOrderId(value: string): CancelOrderByIdReqBuilder {
        this.obj.orderId = value;
        return this;
    }

    build(): CancelOrderByIdReq {
        return this.obj;
    }
}
