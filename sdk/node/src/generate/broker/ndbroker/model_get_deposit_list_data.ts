// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

import { instanceToPlain, plainToInstance } from 'class-transformer';
import { Serializable } from '@internal/interfaces/serializable';
export class GetDepositListData implements Serializable<GetDepositListData> {
    /**
     * deposit uid
     */
    uid?: number;
    /**
     * hash
     */
    hash?: string;
    /**
     * Deposit address
     */
    address?: string;
    /**
     * Address remark. If thereâ€™s no remark, it is empty. When you withdraw from other platforms to the KuCoin, you need to fill in memo(tag). If you do not fill memo (tag), your deposit may not be available, please be cautious.
     */
    memo?: string;
    /**
     * Deposit amount
     */
    amount?: string;
    /**
     * Fees charged for deposit
     */
    fee?: string;
    /**
     * currency
     */
    currency?: string;
    /**
     * Internal deposit or not
     */
    isInner?: boolean;
    /**
     * Wallet Txid
     */
    walletTxId?: string;
    /**
     * Status. Available value: PROCESSING, SUCCESS, FAILURE
     */
    status?: GetDepositListData.StatusEnum;
    /**
     * remark
     */
    remark?: string;
    /**
     * chain name of currency
     */
    chain?: string;
    /**
     * Creation time of the database record
     */
    createdAt?: number;
    /**
     * Update time of the database record
     */
    updatedAt?: number;
    fromJson(input: string): GetDepositListData {
        const jsonObject = JSON.parse(input);
        return plainToInstance(GetDepositListData, jsonObject);
    }

    toJson(): string {
        return JSON.stringify(instanceToPlain(this));
    }

    fromObject(jsonObject: Object): GetDepositListData {
        return plainToInstance(GetDepositListData, jsonObject);
    }
}

export namespace GetDepositListData {
    export enum StatusEnum {
        /**
         *
         */
        PROCESSING = <any>'PROCESSING',
        /**
         *
         */
        SUCCESS = <any>'SUCCESS',
        /**
         *
         */
        FAILURE = <any>'FAILURE',
    }
}
