// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

import { instanceToPlain, plainToInstance } from 'class-transformer';
import { Serializable } from '@internal/interfaces/serializable';

export class AddSubAccountReq implements Serializable<AddSubAccountReq> {
    /**
     * Sub Account Name, Note that this name is unique across the exchange. It is recommended to add a special identifier to prevent name duplication.
     */
    accountName?: string;

    /**
     * Creates a new instance of the `AddSubAccountReq` class.
     * The builder pattern allows step-by-step construction of a `AddSubAccountReq` object.
     */
    static builder(): AddSubAccountReqBuilder {
        return new AddSubAccountReqBuilder();
    }

    /**
     * Creates a new instance of the `AddSubAccountReq` class with the given data.
     */
    static create(data: {
        /**
         * Sub Account Name, Note that this name is unique across the exchange. It is recommended to add a special identifier to prevent name duplication.
         */
        accountName?: string;
    }): AddSubAccountReq {
        let obj = new AddSubAccountReq();
        obj.accountName = data.accountName;
        return obj;
    }

    fromJson(input: string): AddSubAccountReq {
        const jsonObject = JSON.parse(input);
        return plainToInstance(AddSubAccountReq, jsonObject);
    }

    toJson(): string {
        return JSON.stringify(instanceToPlain(this));
    }

    fromObject(jsonObject: Object): AddSubAccountReq {
        return plainToInstance(AddSubAccountReq, jsonObject);
    }
}

export class AddSubAccountReqBuilder {
    obj: AddSubAccountReq = new AddSubAccountReq();
    /**
     * Sub Account Name, Note that this name is unique across the exchange. It is recommended to add a special identifier to prevent name duplication.
     */
    setAccountName(value: string): AddSubAccountReqBuilder {
        this.obj.accountName = value;
        return this;
    }

    build(): AddSubAccountReq {
        return this.obj;
    }
}
