// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

import { instanceToPlain, plainToInstance } from 'class-transformer';
import { Serializable } from '@internal/interfaces/serializable';
export class GetDepositListReq implements Serializable<GetDepositListReq> {
    /**
     * currency
     */
    currency?: string;
    /**
     * Status. Available value: PROCESSING, SUCCESS, FAILURE
     */
    status?: string;
    /**
     * hash
     */
    hash?: string;
    /**
     * Start time (milisecond)
     */
    startTimestamp?: number;
    /**
     * End time (milisecond)，Default sorting in descending order
     */
    endTimestamp?: number;
    /**
     * Maximum number of returned items, maximum 1000, default 1000
     */
    limit?: number = 1000;

    /**
     * Creates a new instance of the `GetDepositListReq` class.
     * The builder pattern allows step-by-step construction of a `GetDepositListReq` object.
     */
    static builder(): GetDepositListReqBuilder {
        return new GetDepositListReqBuilder();
    }

    /**
     * Creates a new instance of the `GetDepositListReq` class with the given data.
     */
    static create(data: {
        /**
         * currency
         */
        currency?: string;
        /**
         * Status. Available value: PROCESSING, SUCCESS, FAILURE
         */
        status?: string;
        /**
         * hash
         */
        hash?: string;
        /**
         * Start time (milisecond)
         */
        startTimestamp?: number;
        /**
         * End time (milisecond)，Default sorting in descending order
         */
        endTimestamp?: number;
        /**
         * Maximum number of returned items, maximum 1000, default 1000
         */
        limit?: number;
    }): GetDepositListReq {
        let obj = new GetDepositListReq();
        obj.currency = data.currency;
        obj.status = data.status;
        obj.hash = data.hash;
        obj.startTimestamp = data.startTimestamp;
        obj.endTimestamp = data.endTimestamp;
        obj.limit = data.limit;
        return obj;
    }

    fromJson(input: string): GetDepositListReq {
        const jsonObject = JSON.parse(input);
        return plainToInstance(GetDepositListReq, jsonObject);
    }

    toJson(): string {
        return JSON.stringify(instanceToPlain(this));
    }

    fromObject(jsonObject: Object): GetDepositListReq {
        return plainToInstance(GetDepositListReq, jsonObject);
    }
}

export class GetDepositListReqBuilder {
    obj: GetDepositListReq = new GetDepositListReq();
    /**
     * currency
     */
    setCurrency(value: string): GetDepositListReqBuilder {
        this.obj.currency = value;
        return this;
    }

    /**
     * Status. Available value: PROCESSING, SUCCESS, FAILURE
     */
    setStatus(value: string): GetDepositListReqBuilder {
        this.obj.status = value;
        return this;
    }

    /**
     * hash
     */
    setHash(value: string): GetDepositListReqBuilder {
        this.obj.hash = value;
        return this;
    }

    /**
     * Start time (milisecond)
     */
    setStartTimestamp(value: number): GetDepositListReqBuilder {
        this.obj.startTimestamp = value;
        return this;
    }

    /**
     * End time (milisecond)，Default sorting in descending order
     */
    setEndTimestamp(value: number): GetDepositListReqBuilder {
        this.obj.endTimestamp = value;
        return this;
    }

    /**
     * Maximum number of returned items, maximum 1000, default 1000
     */
    setLimit(value: number): GetDepositListReqBuilder {
        this.obj.limit = value;
        return this;
    }

    build(): GetDepositListReq {
        return this.obj;
    }
}
