// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

import { instanceToPlain, plainToClassFromExist } from 'class-transformer';
import { Serializable } from '@internal/interfaces/serializable';

export class GetAccountHoldingReq implements Serializable {
    /**
     * currency
     */
    currency?: string;

    /**
     * Product ID
     */
    productId?: string;

    /**
     * Product category
     */
    productCategory?: GetAccountHoldingReq.ProductCategoryEnum;

    /**
     * Current request page.
     */
    currentPage?: number = 1;

    /**
     * Number of results per request. Minimum is 10, maximum is 500.
     */
    pageSize?: number = 15;

    /**
     * Private constructor, please use the corresponding static methods to construct the object.
     */
    private constructor() {}
    /**
     * Creates a new instance of the `GetAccountHoldingReq` class.
     * The builder pattern allows step-by-step construction of a `GetAccountHoldingReq` object.
     */
    static builder(): GetAccountHoldingReqBuilder {
        return new GetAccountHoldingReqBuilder(new GetAccountHoldingReq());
    }

    /**
     * Creates a new instance of the `GetAccountHoldingReq` class with the given data.
     */
    static create(data: {
        /**
         * currency
         */
        currency?: string;
        /**
         * Product ID
         */
        productId?: string;
        /**
         * Product category
         */
        productCategory?: GetAccountHoldingReq.ProductCategoryEnum;
        /**
         * Current request page.
         */
        currentPage?: number;
        /**
         * Number of results per request. Minimum is 10, maximum is 500.
         */
        pageSize?: number;
    }): GetAccountHoldingReq {
        let obj = new GetAccountHoldingReq();
        obj.currency = data.currency;
        obj.productId = data.productId;
        obj.productCategory = data.productCategory;
        if (data.currentPage) {
            obj.currentPage = data.currentPage;
        } else {
            obj.currentPage = 1;
        }
        if (data.pageSize) {
            obj.pageSize = data.pageSize;
        } else {
            obj.pageSize = 15;
        }
        return obj;
    }

    /**
     * Convert the object to a JSON string.
     */
    toJson(): string {
        return JSON.stringify(instanceToPlain(this));
    }
    /**
     * Create an object from a JSON string.
     */
    static fromJson(input: string): GetAccountHoldingReq {
        return this.fromObject(JSON.parse(input));
    }
    /**
     * Create an object from Js Object.
     */
    static fromObject(jsonObject: Object): GetAccountHoldingReq {
        return plainToClassFromExist(new GetAccountHoldingReq(), jsonObject);
    }
}

export namespace GetAccountHoldingReq {
    export enum ProductCategoryEnum {
        /**
         * Savings
         */
        DEMAND = <any>'DEMAND',
        /**
         * Activity
         */
        ACTIVITY = <any>'ACTIVITY',
        /**
         * Staking
         */
        STAKING = <any>'STAKING',
        /**
         * KCS Staking
         */
        KCS_STAKING = <any>'KCS_STAKING',
        /**
         * ETHStaking
         */
        ETH2 = <any>'ETH2',
    }
}

export class GetAccountHoldingReqBuilder {
    constructor(readonly obj: GetAccountHoldingReq) {
        this.obj = obj;
    }
    /**
     * currency
     */
    setCurrency(value: string): GetAccountHoldingReqBuilder {
        this.obj.currency = value;
        return this;
    }

    /**
     * Product ID
     */
    setProductId(value: string): GetAccountHoldingReqBuilder {
        this.obj.productId = value;
        return this;
    }

    /**
     * Product category
     */
    setProductCategory(
        value: GetAccountHoldingReq.ProductCategoryEnum,
    ): GetAccountHoldingReqBuilder {
        this.obj.productCategory = value;
        return this;
    }

    /**
     * Current request page.
     */
    setCurrentPage(value: number): GetAccountHoldingReqBuilder {
        this.obj.currentPage = value;
        return this;
    }

    /**
     * Number of results per request. Minimum is 10, maximum is 500.
     */
    setPageSize(value: number): GetAccountHoldingReqBuilder {
        this.obj.pageSize = value;
        return this;
    }

    /**
     * Get the final object.
     */
    build(): GetAccountHoldingReq {
        return this.obj;
    }
}
