// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

import { Transport } from '@internal/interfaces/transport';
import { GetStakingProductsReq } from './model_get_staking_products_req';
import { GetSavingsProductsReq } from './model_get_savings_products_req';
import { GetPromotionProductsReq } from './model_get_promotion_products_req';
import { GetPromotionProductsResp } from './model_get_promotion_products_resp';
import { PurchaseReq } from './model_purchase_req';
import { GetAccountHoldingResp } from './model_get_account_holding_resp';
import { GetETHStakingProductsResp } from './model_get_eth_staking_products_resp';
import { GetAccountHoldingReq } from './model_get_account_holding_req';
import { PurchaseResp } from './model_purchase_resp';
import { GetStakingProductsResp } from './model_get_staking_products_resp';
import { GetETHStakingProductsReq } from './model_get_eth_staking_products_req';
import { GetRedeemPreviewResp } from './model_get_redeem_preview_resp';
import { GetKcsStakingProductsReq } from './model_get_kcs_staking_products_req';
import { RedeemResp } from './model_redeem_resp';
import { GetRedeemPreviewReq } from './model_get_redeem_preview_req';
import { GetSavingsProductsResp } from './model_get_savings_products_resp';
import { RedeemReq } from './model_redeem_req';
import { GetKcsStakingProductsResp } from './model_get_kcs_staking_products_resp';

export interface EarnAPI {
    /**
     * getETHStakingProducts Get ETH Staking Products
     * Description: This endpoint can get available ETH staking products. If no products are available, an empty list is returned.
     * Documentation: https://www.kucoin.com/docs-new/api-3470276
     * +---------------------+---------+
     * | Extra API Info      | Value   |
     * +---------------------+---------+
     * | API-DOMAIN          | SPOT    |
     * | API-CHANNEL         | PRIVATE |
     * | API-PERMISSION      | GENERAL |
     * | API-RATE-LIMIT-POOL | EARN    |
     * | API-RATE-LIMIT      | 5       |
     * +---------------------+---------+
     */
    getETHStakingProducts(req: GetETHStakingProductsReq): Promise<GetETHStakingProductsResp>;

    /**
     * getAccountHolding Get Account Holding
     * Description: This endpoint can get current holding assets information. If no current holding assets are available, an empty list is returned.
     * Documentation: https://www.kucoin.com/docs-new/api-3470273
     * +---------------------+---------+
     * | Extra API Info      | Value   |
     * +---------------------+---------+
     * | API-DOMAIN          | SPOT    |
     * | API-CHANNEL         | PRIVATE |
     * | API-PERMISSION      | GENERAL |
     * | API-RATE-LIMIT-POOL | EARN    |
     * | API-RATE-LIMIT      | 5       |
     * +---------------------+---------+
     */
    getAccountHolding(req: GetAccountHoldingReq): Promise<GetAccountHoldingResp>;

    /**
     * getKcsStakingProducts Get KCS Staking Products
     * Description: This endpoint can get available KCS staking products. If no products are available, an empty list is returned.
     * Documentation: https://www.kucoin.com/docs-new/api-3470275
     * +---------------------+---------+
     * | Extra API Info      | Value   |
     * +---------------------+---------+
     * | API-DOMAIN          | SPOT    |
     * | API-CHANNEL         | PRIVATE |
     * | API-PERMISSION      | GENERAL |
     * | API-RATE-LIMIT-POOL | EARN    |
     * | API-RATE-LIMIT      | 5       |
     * +---------------------+---------+
     */
    getKcsStakingProducts(req: GetKcsStakingProductsReq): Promise<GetKcsStakingProductsResp>;

    /**
     * redeem Redeem
     * Description: This endpoint allows initiating redemption by holding ID. If the current holding is fully redeemed or in the process of being redeemed, it indicates that the holding does not exist.
     * Documentation: https://www.kucoin.com/docs-new/api-3470270
     * +---------------------+---------+
     * | Extra API Info      | Value   |
     * +---------------------+---------+
     * | API-DOMAIN          | SPOT    |
     * | API-CHANNEL         | PRIVATE |
     * | API-PERMISSION      | EARN    |
     * | API-RATE-LIMIT-POOL | EARN    |
     * | API-RATE-LIMIT      | 5       |
     * +---------------------+---------+
     */
    redeem(req: RedeemReq): Promise<RedeemResp>;

    /**
     * purchase purchase
     * Description: This endpoint allows subscribing earn product
     * Documentation: https://www.kucoin.com/docs-new/api-3470268
     * +---------------------+---------+
     * | Extra API Info      | Value   |
     * +---------------------+---------+
     * | API-DOMAIN          | SPOT    |
     * | API-CHANNEL         | PRIVATE |
     * | API-PERMISSION      | EARN    |
     * | API-RATE-LIMIT-POOL | EARN    |
     * | API-RATE-LIMIT      | 5       |
     * +---------------------+---------+
     */
    purchase(req: PurchaseReq): Promise<PurchaseResp>;

    /**
     * getPromotionProducts Get Promotion Products
     * Description: This endpoint can get available limited-time promotion products. If no products are available, an empty list is returned.
     * Documentation: https://www.kucoin.com/docs-new/api-3470272
     * +---------------------+---------+
     * | Extra API Info      | Value   |
     * +---------------------+---------+
     * | API-DOMAIN          | SPOT    |
     * | API-CHANNEL         | PRIVATE |
     * | API-PERMISSION      | GENERAL |
     * | API-RATE-LIMIT-POOL | EARN    |
     * | API-RATE-LIMIT      | 5       |
     * +---------------------+---------+
     */
    getPromotionProducts(req: GetPromotionProductsReq): Promise<GetPromotionProductsResp>;

    /**
     * getRedeemPreview Get Redeem Preview
     * Description: This endpoint allows subscribing earn products
     * Documentation: https://www.kucoin.com/docs-new/api-3470269
     * +---------------------+---------+
     * | Extra API Info      | Value   |
     * +---------------------+---------+
     * | API-DOMAIN          | SPOT    |
     * | API-CHANNEL         | PRIVATE |
     * | API-PERMISSION      | EARN    |
     * | API-RATE-LIMIT-POOL | EARN    |
     * | API-RATE-LIMIT      | 5       |
     * +---------------------+---------+
     */
    getRedeemPreview(req: GetRedeemPreviewReq): Promise<GetRedeemPreviewResp>;

    /**
     * getSavingsProducts Get Savings Products
     * Description: This endpoint can get available savings products. If no products are available, an empty list is returned.
     * Documentation: https://www.kucoin.com/docs-new/api-3470271
     * +---------------------+---------+
     * | Extra API Info      | Value   |
     * +---------------------+---------+
     * | API-DOMAIN          | SPOT    |
     * | API-CHANNEL         | PRIVATE |
     * | API-PERMISSION      | GENERAL |
     * | API-RATE-LIMIT-POOL | EARN    |
     * | API-RATE-LIMIT      | 5       |
     * +---------------------+---------+
     */
    getSavingsProducts(req: GetSavingsProductsReq): Promise<GetSavingsProductsResp>;

    /**
     * getStakingProducts Get Staking Products
     * Description: This endpoint can get available staking products. If no products are available, an empty list is returned.
     * Documentation: https://www.kucoin.com/docs-new/api-3470274
     * +---------------------+---------+
     * | Extra API Info      | Value   |
     * +---------------------+---------+
     * | API-DOMAIN          | SPOT    |
     * | API-CHANNEL         | PRIVATE |
     * | API-PERMISSION      | GENERAL |
     * | API-RATE-LIMIT-POOL | EARN    |
     * | API-RATE-LIMIT      | 5       |
     * +---------------------+---------+
     */
    getStakingProducts(req: GetStakingProductsReq): Promise<GetStakingProductsResp>;
}

export class EarnAPIImpl implements EarnAPI {
    constructor(private transport: Transport) {}

    getETHStakingProducts(req: GetETHStakingProductsReq): Promise<GetETHStakingProductsResp> {
        return this.transport.call(
            'spot',
            false,
            'GET',
            '/api/v1/earn/eth-staking/products',
            req,
            new GetETHStakingProductsResp(),
            false,
        );
    }

    getAccountHolding(req: GetAccountHoldingReq): Promise<GetAccountHoldingResp> {
        return this.transport.call(
            'spot',
            false,
            'GET',
            '/api/v1/earn/hold-assets',
            req,
            new GetAccountHoldingResp(),
            false,
        );
    }

    getKcsStakingProducts(req: GetKcsStakingProductsReq): Promise<GetKcsStakingProductsResp> {
        return this.transport.call(
            'spot',
            false,
            'GET',
            '/api/v1/earn/kcs-staking/products',
            req,
            new GetKcsStakingProductsResp(),
            false,
        );
    }

    redeem(req: RedeemReq): Promise<RedeemResp> {
        return this.transport.call(
            'spot',
            false,
            'DELETE',
            '/api/v1/earn/orders',
            req,
            new RedeemResp(),
            false,
        );
    }

    purchase(req: PurchaseReq): Promise<PurchaseResp> {
        return this.transport.call(
            'spot',
            false,
            'POST',
            '/api/v1/earn/orders',
            req,
            new PurchaseResp(),
            false,
        );
    }

    getPromotionProducts(req: GetPromotionProductsReq): Promise<GetPromotionProductsResp> {
        return this.transport.call(
            'spot',
            false,
            'GET',
            '/api/v1/earn/promotion/products',
            req,
            new GetPromotionProductsResp(),
            false,
        );
    }

    getRedeemPreview(req: GetRedeemPreviewReq): Promise<GetRedeemPreviewResp> {
        return this.transport.call(
            'spot',
            false,
            'GET',
            '/api/v1/earn/redeem-preview',
            req,
            new GetRedeemPreviewResp(),
            false,
        );
    }

    getSavingsProducts(req: GetSavingsProductsReq): Promise<GetSavingsProductsResp> {
        return this.transport.call(
            'spot',
            false,
            'GET',
            '/api/v1/earn/saving/products',
            req,
            new GetSavingsProductsResp(),
            false,
        );
    }

    getStakingProducts(req: GetStakingProductsReq): Promise<GetStakingProductsResp> {
        return this.transport.call(
            'spot',
            false,
            'GET',
            '/api/v1/earn/staking/products',
            req,
            new GetStakingProductsResp(),
            false,
        );
    }
}
