// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

import { instanceToPlain, plainToClassFromExist } from 'class-transformer';
import { Serializable } from '@internal/interfaces/serializable';

export class GetStakingProductsReq implements Serializable {
    /**
     * currency
     */
    currency?: string;

    private constructor() {}
    /**
     * Creates a new instance of the `GetStakingProductsReq` class.
     * The builder pattern allows step-by-step construction of a `GetStakingProductsReq` object.
     */
    static builder(): GetStakingProductsReqBuilder {
        return new GetStakingProductsReqBuilder(new GetStakingProductsReq());
    }

    /**
     * Creates a new instance of the `GetStakingProductsReq` class with the given data.
     */
    static create(data: {
        /**
         * currency
         */
        currency?: string;
    }): GetStakingProductsReq {
        let obj = new GetStakingProductsReq();
        obj.currency = data.currency;
        return obj;
    }

    toJson(): string {
        return JSON.stringify(instanceToPlain(this));
    }

    static fromJson(input: string): GetStakingProductsReq {
        return this.fromObject(JSON.parse(input));
    }

    static fromObject(jsonObject: Object): GetStakingProductsReq {
        return plainToClassFromExist(new GetStakingProductsReq(), jsonObject);
    }
}

export class GetStakingProductsReqBuilder {
    constructor(readonly obj: GetStakingProductsReq) {
        this.obj = obj;
    }
    /**
     * currency
     */
    setCurrency(value: string): GetStakingProductsReqBuilder {
        this.obj.currency = value;
        return this;
    }

    build(): GetStakingProductsReq {
        return this.obj;
    }
}
