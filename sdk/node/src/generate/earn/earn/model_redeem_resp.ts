// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

import { instanceToPlain, Exclude, plainToInstance } from 'class-transformer';
import { RestResponse } from '@model/common';
import { Response } from '@internal/interfaces/response';
export class RedeemResp implements Response<RedeemResp, RestResponse> {
    /**
     * Redemption order ID
     */
    orderTxId?: string;
    /**
     * Expected deliver time (milliseconds)
     */
    deliverTime?: number;
    /**
     * Redemption status: SUCCESS (successful), PENDING (redemption pending)
     */
    status?: RedeemResp.StatusEnum;
    /**
     * Redemption amount
     */
    amount?: string;
    /**
     * common response
     */
    @Exclude()
    commonResponse?: RestResponse;

    setCommonResponse(response: RestResponse): void {
        this.commonResponse = response;
    }

    fromJson(input: string): RedeemResp {
        const jsonObject = JSON.parse(input);
        return plainToInstance(RedeemResp, jsonObject);
    }

    toJson(): string {
        return JSON.stringify(instanceToPlain(this));
    }

    fromObject(jsonObject: Object): RedeemResp {
        return plainToInstance(RedeemResp, jsonObject);
    }
}

export namespace RedeemResp {
    export enum StatusEnum {
        /**
         *
         */
        SUCCESS = <any>'SUCCESS',
        /**
         *
         */
        PENDING = <any>'PENDING',
    }
}
