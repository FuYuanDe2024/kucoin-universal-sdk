// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

import { instanceToPlain, plainToClassFromExist } from 'class-transformer';
import { Serializable } from '@internal/interfaces/serializable';

export class GetSavingsProductsReq implements Serializable {
    /**
     * currency
     */
    currency?: string;

    /**
     * Private constructor, please use the corresponding static methods to construct the object.
     */
    private constructor() {}
    /**
     * Creates a new instance of the `GetSavingsProductsReq` class.
     * The builder pattern allows step-by-step construction of a `GetSavingsProductsReq` object.
     */
    static builder(): GetSavingsProductsReqBuilder {
        return new GetSavingsProductsReqBuilder(new GetSavingsProductsReq());
    }

    /**
     * Creates a new instance of the `GetSavingsProductsReq` class with the given data.
     */
    static create(data: {
        /**
         * currency
         */
        currency?: string;
    }): GetSavingsProductsReq {
        let obj = new GetSavingsProductsReq();
        obj.currency = data.currency;
        return obj;
    }

    /**
     * Convert the object to a JSON string.
     */
    toJson(): string {
        return JSON.stringify(instanceToPlain(this));
    }
    /**
     * Create an object from a JSON string.
     */
    static fromJson(input: string): GetSavingsProductsReq {
        return this.fromObject(JSON.parse(input));
    }
    /**
     * Create an object from Js Object.
     */
    static fromObject(jsonObject: Object): GetSavingsProductsReq {
        return plainToClassFromExist(new GetSavingsProductsReq(), jsonObject);
    }
}

export class GetSavingsProductsReqBuilder {
    constructor(readonly obj: GetSavingsProductsReq) {
        this.obj = obj;
    }
    /**
     * currency
     */
    setCurrency(value: string): GetSavingsProductsReqBuilder {
        this.obj.currency = value;
        return this;
    }

    /**
     * Get the final object.
     */
    build(): GetSavingsProductsReq {
        return this.obj;
    }
}
