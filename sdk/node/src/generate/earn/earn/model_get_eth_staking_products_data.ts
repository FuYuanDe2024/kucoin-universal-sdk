// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

import { instanceToPlain, plainToInstance } from 'class-transformer';
import { Serializable } from '@internal/interfaces/serializable';
export class GetETHStakingProductsData implements Serializable<GetETHStakingProductsData> {
    /**
     * Product ID
     */
    id?: string;
    /**
     * Product category:  ETH2 (ETH Staking)
     */
    category?: GetETHStakingProductsData.CategoryEnum;
    /**
     * Product subtype: DEMAND (demand)
     */
    type?: GetETHStakingProductsData.TypeEnum;
    /**
     * Maximum precision supported
     */
    precision?: number;
    /**
     * currency
     */
    currency?: string;
    /**
     * Income currency
     */
    incomeCurrency?: string;
    /**
     * Annualized Rate of Return, for example, 0.035 is equal to 3.5% annualized rate of return
     */
    returnRate?: string;
    /**
     * Min user subscribe amount
     */
    userLowerLimit?: string;
    /**
     * Max user subscribe amount
     */
    userUpperLimit?: string;
    /**
     * Products total subscribe amount
     */
    productUpperLimit?: string;
    /**
     * Products remain subscribe amount
     */
    productRemainAmount?: string;
    /**
     * Redemption waiting period (days)
     */
    redeemPeriod?: number;
    /**
     * Redemption channel: MANUAL (manual redemption), TRANS_DEMAND (transfer to corresponding demand product upon maturity), AUTO (redeem to funding account upon maturity)
     */
    redeemType?: GetETHStakingProductsData.RedeemTypeEnum;
    /**
     * Income release type: DAILY (daily release), AFTER (release after product ends)
     */
    incomeReleaseType?: GetETHStakingProductsData.IncomeReleaseTypeEnum;
    /**
     * Subscription start time, in milliseconds
     */
    applyStartTime?: number;
    /**
     * Subscription end time, in milliseconds
     */
    applyEndTime?: number;
    /**
     * Product earliest interest start time, in milliseconds
     */
    lockStartTime?: number;
    /**
     * Product maturity time, in milliseconds
     */
    lockEndTime?: number;
    /**
     * Most recent interest date(millisecond)
     */
    interestDate?: number;
    /**
     * Whether the product is exclusive for new users: 0 (no), 1 (yes)
     */
    newUserOnly?: GetETHStakingProductsData.NewUserOnlyEnum;
    /**
     * Whether the fixed product supports early redemption: 0 (no), 1 (yes)
     */
    earlyRedeemSupported?: GetETHStakingProductsData.EarlyRedeemSupportedEnum;
    /**
     * Product duration (days)
     */
    duration?: number;
    /**
     * Product status: ONGOING(Subscription in progress), PENDING(Preheating Subscription), FULL(Subscribed), INTERESTING (Interest in progress)
     */
    status?: GetETHStakingProductsData.StatusEnum;
    fromJson(input: string): GetETHStakingProductsData {
        const jsonObject = JSON.parse(input);
        return plainToInstance(GetETHStakingProductsData, jsonObject);
    }

    toJson(): string {
        return JSON.stringify(instanceToPlain(this));
    }

    fromObject(jsonObject: Object): GetETHStakingProductsData {
        return plainToInstance(GetETHStakingProductsData, jsonObject);
    }
}

export namespace GetETHStakingProductsData {
    export enum CategoryEnum {
        /**
         *
         */
        ETH2 = <any>'ETH2',
    }
    export enum TypeEnum {
        /**
         * demand
         */
        DEMAND = <any>'DEMAND',
    }
    export enum RedeemTypeEnum {
        /**
         *
         */
        MANUAL = <any>'MANUAL',
        /**
         *
         */
        TRANS_DEMAND = <any>'TRANS_DEMAND',
        /**
         *
         */
        AUTO = <any>'AUTO',
    }
    export enum IncomeReleaseTypeEnum {
        /**
         *
         */
        DAILY = <any>'DAILY',
        /**
         *
         */
        AFTER = <any>'AFTER',
    }
    export enum NewUserOnlyEnum {
        /**
         *
         */
        _0 = <any>0,
        /**
         *
         */
        _1 = <any>1,
    }
    export enum EarlyRedeemSupportedEnum {
        /**
         *
         */
        _0 = <any>0,
        /**
         *
         */
        _1 = <any>1,
    }
    export enum StatusEnum {
        /**
         *
         */
        ONGOING = <any>'ONGOING',
        /**
         *
         */
        PENDING = <any>'PENDING',
        /**
         *
         */
        FULL = <any>'FULL',
        /**
         *
         */
        INTERESTING = <any>'INTERESTING',
    }
}
