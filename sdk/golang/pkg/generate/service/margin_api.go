// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

package service

import (
	"github.com/Kucoin/kucoin-universal-sdk/sdk/golang/internal/interfaces"
	"github.com/Kucoin/kucoin-universal-sdk/sdk/golang/pkg/generate/margin/credit"
	"github.com/Kucoin/kucoin-universal-sdk/sdk/golang/pkg/generate/margin/debit"
	"github.com/Kucoin/kucoin-universal-sdk/sdk/golang/pkg/generate/margin/market"
	"github.com/Kucoin/kucoin-universal-sdk/sdk/golang/pkg/generate/margin/order"
	"github.com/Kucoin/kucoin-universal-sdk/sdk/golang/pkg/generate/margin/risklimit"
)

type MarginService interface {

	// Get OrderAPI API
	GetOrderAPI() order.OrderAPI

	// Get DebitAPI API
	GetDebitAPI() debit.DebitAPI

	// Get CreditAPI API
	GetCreditAPI() credit.CreditAPI

	// Get MarketAPI API
	GetMarketAPI() market.MarketAPI

	// Get RiskLimitAPI API
	GetRiskLimitAPI() risklimit.RiskLimitAPI
}

type MarginServiceImpl struct {
	OrderAPI     order.OrderAPI
	DebitAPI     debit.DebitAPI
	CreditAPI    credit.CreditAPI
	MarketAPI    market.MarketAPI
	RiskLimitAPI risklimit.RiskLimitAPI
}

func NewMarginService(transport interfaces.Transport) MarginService {
	api := &MarginServiceImpl{}
	api.OrderAPI = order.NewOrderAPIImp(transport)
	api.DebitAPI = debit.NewDebitAPIImp(transport)
	api.CreditAPI = credit.NewCreditAPIImp(transport)
	api.MarketAPI = market.NewMarketAPIImp(transport)
	api.RiskLimitAPI = risklimit.NewRiskLimitAPIImp(transport)
	return api
}

func (impl *MarginServiceImpl) GetOrderAPI() order.OrderAPI {
	return impl.OrderAPI
}
func (impl *MarginServiceImpl) GetDebitAPI() debit.DebitAPI {
	return impl.DebitAPI
}
func (impl *MarginServiceImpl) GetCreditAPI() credit.CreditAPI {
	return impl.CreditAPI
}
func (impl *MarginServiceImpl) GetMarketAPI() market.MarketAPI {
	return impl.MarketAPI
}
func (impl *MarginServiceImpl) GetRiskLimitAPI() risklimit.RiskLimitAPI {
	return impl.RiskLimitAPI
}
