// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

package spotpublic

import (
	"encoding/json"
	"github.com/Kucoin/kucoin-universal-sdk/sdk/golang/pkg/types"
)

// OrderbookLevel50Event struct for OrderbookLevel50Event
type OrderbookLevel50Event struct {
	// common response
	CommonResponse *types.WsMessage
	Changes        OrderbookLevel50Changes `json:"changes,omitempty"`
	SequenceEnd    int64                   `json:"sequenceEnd,omitempty"`
	SequenceStart  int64                   `json:"sequenceStart,omitempty"`
	Symbol         string                  `json:"symbol,omitempty"`
	Time           int64                   `json:"time,omitempty"`
}

// NewOrderbookLevel50Event instantiates a new OrderbookLevel50Event object
// This constructor will assign default values to properties that have it defined
func NewOrderbookLevel50Event(changes OrderbookLevel50Changes, sequenceEnd int64, sequenceStart int64, symbol string, time int64) *OrderbookLevel50Event {
	this := OrderbookLevel50Event{}
	this.Changes = changes
	this.SequenceEnd = sequenceEnd
	this.SequenceStart = sequenceStart
	this.Symbol = symbol
	this.Time = time
	return &this
}

// NewOrderbookLevel50EventWithDefaults instantiates a new OrderbookLevel50Event object
// This constructor will only assign default values to properties that have it defined,
func NewOrderbookLevel50EventWithDefaults() *OrderbookLevel50Event {
	this := OrderbookLevel50Event{}
	return &this
}

func (o *OrderbookLevel50Event) ToMap() map[string]interface{} {
	toSerialize := map[string]interface{}{}
	toSerialize["changes"] = o.Changes
	toSerialize["sequenceEnd"] = o.SequenceEnd
	toSerialize["sequenceStart"] = o.SequenceStart
	toSerialize["symbol"] = o.Symbol
	toSerialize["time"] = o.Time
	return toSerialize
}

type OrderbookLevel50EventCallback func(topic string, subject string, data *OrderbookLevel50Event) error

type OrderbookLevel50EventCallbackWrapper struct {
	callback OrderbookLevel50EventCallback
}

func (w *OrderbookLevel50EventCallbackWrapper) OnMessage(msg *types.WsMessage) error {
	obj := &OrderbookLevel50Event{}
	err := json.Unmarshal(msg.RawData, obj)
	if err != nil {
		return err
	}
	obj.CommonResponse = msg
	return w.callback(msg.Topic, msg.Subject, obj)
}
