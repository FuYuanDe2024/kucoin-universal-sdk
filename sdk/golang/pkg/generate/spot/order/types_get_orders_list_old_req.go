// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

package order

// GetOrdersListOldReq struct for GetOrdersListOldReq
type GetOrdersListOldReq struct {
	// symbol
	Symbol *string `json:"symbol,omitempty" url:"symbol,omitempty"`
	// active or done(done as default), Only list orders with a specific status .
	Status *string `json:"status,omitempty" url:"status,omitempty"`
	// buy or sell
	Side *string `json:"side,omitempty" url:"side,omitempty"`
	// limit, market, limit_stop or market_stop
	Type *string `json:"type,omitempty" url:"type,omitempty"`
	// The type of trading:TRADE - Spot Trading(TRADE as default), MARGIN_TRADE - Cross Margin Trading, MARGIN_ISOLATED_TRADE - Isolated Margin Trading.
	TradeType *string `json:"tradeType,omitempty" url:"tradeType,omitempty"`
	// Start time (milisecond)
	StartAt *int64 `json:"startAt,omitempty" url:"startAt,omitempty"`
	// End time (milisecond)
	EndAt *int64 `json:"endAt,omitempty" url:"endAt,omitempty"`
	// Current request page.
	CurrentPage *int32 `json:"currentPage,omitempty" url:"currentPage,omitempty"`
	// Number of results per request. Minimum is 10, maximum is 500.
	PageSize *int32 `json:"pageSize,omitempty" url:"pageSize,omitempty"`
}

// NewGetOrdersListOldReq instantiates a new GetOrdersListOldReq object
// This constructor will assign default values to properties that have it defined
func NewGetOrdersListOldReq() *GetOrdersListOldReq {
	this := GetOrdersListOldReq{}
	var status string = "done"
	this.Status = &status
	var tradeType string = "TRADE"
	this.TradeType = &tradeType
	var currentPage int32 = 1
	this.CurrentPage = &currentPage
	var pageSize int32 = 50
	this.PageSize = &pageSize
	return &this
}

// NewGetOrdersListOldReqWithDefaults instantiates a new GetOrdersListOldReq object
// This constructor will only assign default values to properties that have it defined,
func NewGetOrdersListOldReqWithDefaults() *GetOrdersListOldReq {
	this := GetOrdersListOldReq{}
	var status string = "done"
	this.Status = &status
	var tradeType string = "TRADE"
	this.TradeType = &tradeType
	var currentPage int32 = 1
	this.CurrentPage = &currentPage
	var pageSize int32 = 50
	this.PageSize = &pageSize
	return &this
}

func (o *GetOrdersListOldReq) ToMap() map[string]interface{} {
	toSerialize := map[string]interface{}{}
	toSerialize["symbol"] = o.Symbol
	toSerialize["status"] = o.Status
	toSerialize["side"] = o.Side
	toSerialize["type"] = o.Type
	toSerialize["tradeType"] = o.TradeType
	toSerialize["startAt"] = o.StartAt
	toSerialize["endAt"] = o.EndAt
	toSerialize["currentPage"] = o.CurrentPage
	toSerialize["pageSize"] = o.PageSize
	return toSerialize
}

type GetOrdersListOldReqBuilder struct {
	obj *GetOrdersListOldReq
}

func NewGetOrdersListOldReqBuilder() *GetOrdersListOldReqBuilder {
	return &GetOrdersListOldReqBuilder{obj: NewGetOrdersListOldReqWithDefaults()}
}

// symbol
func (builder *GetOrdersListOldReqBuilder) SetSymbol(value string) *GetOrdersListOldReqBuilder {
	builder.obj.Symbol = &value
	return builder
}

// active or done(done as default), Only list orders with a specific status .
func (builder *GetOrdersListOldReqBuilder) SetStatus(value string) *GetOrdersListOldReqBuilder {
	builder.obj.Status = &value
	return builder
}

// buy or sell
func (builder *GetOrdersListOldReqBuilder) SetSide(value string) *GetOrdersListOldReqBuilder {
	builder.obj.Side = &value
	return builder
}

// limit, market, limit_stop or market_stop
func (builder *GetOrdersListOldReqBuilder) SetType(value string) *GetOrdersListOldReqBuilder {
	builder.obj.Type = &value
	return builder
}

// The type of trading:TRADE - Spot Trading(TRADE as default), MARGIN_TRADE - Cross Margin Trading, MARGIN_ISOLATED_TRADE - Isolated Margin Trading.
func (builder *GetOrdersListOldReqBuilder) SetTradeType(value string) *GetOrdersListOldReqBuilder {
	builder.obj.TradeType = &value
	return builder
}

// Start time (milisecond)
func (builder *GetOrdersListOldReqBuilder) SetStartAt(value int64) *GetOrdersListOldReqBuilder {
	builder.obj.StartAt = &value
	return builder
}

// End time (milisecond)
func (builder *GetOrdersListOldReqBuilder) SetEndAt(value int64) *GetOrdersListOldReqBuilder {
	builder.obj.EndAt = &value
	return builder
}

// Current request page.
func (builder *GetOrdersListOldReqBuilder) SetCurrentPage(value int32) *GetOrdersListOldReqBuilder {
	builder.obj.CurrentPage = &value
	return builder
}

// Number of results per request. Minimum is 10, maximum is 500.
func (builder *GetOrdersListOldReqBuilder) SetPageSize(value int32) *GetOrdersListOldReqBuilder {
	builder.obj.PageSize = &value
	return builder
}

func (builder *GetOrdersListOldReqBuilder) Build() *GetOrdersListOldReq {
	return builder.obj
}
