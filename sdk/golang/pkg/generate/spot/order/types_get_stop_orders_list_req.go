// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

package order

// GetStopOrdersListReq struct for GetStopOrdersListReq
type GetStopOrdersListReq struct {
	// Only list orders for a specific symbol
	Symbol *string `json:"symbol,omitempty"`
	// buy or sell
	Side *string `json:"side,omitempty"`
	// limit, market, limit_stop or market_stop
	Type *string `json:"type,omitempty"`
	// The type of trading : TRADE（Spot）, MARGIN_TRADE (Cross Margin), MARGIN_ISOLATED_TRADE (Isolated Margin). Default is TRADE
	TradeType *string `json:"tradeType,omitempty"`
	// Start time (milisecond)
	StartAt *float32 `json:"startAt,omitempty"`
	// End time (milisecond)
	EndAt *float32 `json:"endAt,omitempty"`
	// current page
	CurrentPage *int32 `json:"currentPage,omitempty"`
	// comma seperated order ID list
	OrderIds *string `json:"orderIds,omitempty"`
	// page size
	PageSize *int32 `json:"pageSize,omitempty"`
	// Order type: stop: stop loss order, oco: oco order
	Stop *string `json:"stop,omitempty"`
}

// NewGetStopOrdersListReq instantiates a new GetStopOrdersListReq object
// This constructor will assign default values to properties that have it defined
func NewGetStopOrdersListReq() *GetStopOrdersListReq {
	this := GetStopOrdersListReq{}
	return &this
}

// NewGetStopOrdersListReqWithDefaults instantiates a new GetStopOrdersListReq object
// This constructor will only assign default values to properties that have it defined,
func NewGetStopOrdersListReqWithDefaults() *GetStopOrdersListReq {
	this := GetStopOrdersListReq{}
	return &this
}

func (o *GetStopOrdersListReq) ToMap() map[string]interface{} {
	toSerialize := map[string]interface{}{}
	toSerialize["symbol"] = o.Symbol
	toSerialize["side"] = o.Side
	toSerialize["type"] = o.Type
	toSerialize["tradeType"] = o.TradeType
	toSerialize["startAt"] = o.StartAt
	toSerialize["endAt"] = o.EndAt
	toSerialize["currentPage"] = o.CurrentPage
	toSerialize["orderIds"] = o.OrderIds
	toSerialize["pageSize"] = o.PageSize
	toSerialize["stop"] = o.Stop
	return toSerialize
}

type GetStopOrdersListReqBuilder struct {
	obj *GetStopOrdersListReq
}

func NewGetStopOrdersListReqBuilder() *GetStopOrdersListReqBuilder {
	return &GetStopOrdersListReqBuilder{obj: NewGetStopOrdersListReqWithDefaults()}
}

// Only list orders for a specific symbol
func (builder *GetStopOrdersListReqBuilder) SetSymbol(value string) *GetStopOrdersListReqBuilder {
	builder.obj.Symbol = &value
	return builder
}

// buy or sell
func (builder *GetStopOrdersListReqBuilder) SetSide(value string) *GetStopOrdersListReqBuilder {
	builder.obj.Side = &value
	return builder
}

// limit, market, limit_stop or market_stop
func (builder *GetStopOrdersListReqBuilder) SetType(value string) *GetStopOrdersListReqBuilder {
	builder.obj.Type = &value
	return builder
}

// The type of trading : TRADE（Spot）, MARGIN_TRADE (Cross Margin), MARGIN_ISOLATED_TRADE (Isolated Margin). Default is TRADE
func (builder *GetStopOrdersListReqBuilder) SetTradeType(value string) *GetStopOrdersListReqBuilder {
	builder.obj.TradeType = &value
	return builder
}

// Start time (milisecond)
func (builder *GetStopOrdersListReqBuilder) SetStartAt(value float32) *GetStopOrdersListReqBuilder {
	builder.obj.StartAt = &value
	return builder
}

// End time (milisecond)
func (builder *GetStopOrdersListReqBuilder) SetEndAt(value float32) *GetStopOrdersListReqBuilder {
	builder.obj.EndAt = &value
	return builder
}

// current page
func (builder *GetStopOrdersListReqBuilder) SetCurrentPage(value int32) *GetStopOrdersListReqBuilder {
	builder.obj.CurrentPage = &value
	return builder
}

// comma seperated order ID list
func (builder *GetStopOrdersListReqBuilder) SetOrderIds(value string) *GetStopOrdersListReqBuilder {
	builder.obj.OrderIds = &value
	return builder
}

// page size
func (builder *GetStopOrdersListReqBuilder) SetPageSize(value int32) *GetStopOrdersListReqBuilder {
	builder.obj.PageSize = &value
	return builder
}

// Order type: stop: stop loss order, oco: oco order
func (builder *GetStopOrdersListReqBuilder) SetStop(value string) *GetStopOrdersListReqBuilder {
	builder.obj.Stop = &value
	return builder
}

func (builder *GetStopOrdersListReqBuilder) Build() *GetStopOrdersListReq {
	return builder.obj
}
