// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

package account

// GetCrossMarginAccountReq struct for GetCrossMarginAccountReq
type GetCrossMarginAccountReq struct {
	// quote currency, currently only supports USDT, KCS, BTC, USDT as default
	QuoteCurrency *string `json:"quoteCurrency,omitempty" url:"quoteCurrency,omitempty"`
	// Query account type (default MARGIN), MARGIN - only query low frequency cross margin account, MARGIN_V2-only query high frequency cross margin account, ALL - consistent aggregate query with the web side
	QueryType *string `json:"queryType,omitempty" url:"queryType,omitempty"`
}

// NewGetCrossMarginAccountReq instantiates a new GetCrossMarginAccountReq object
// This constructor will assign default values to properties that have it defined
func NewGetCrossMarginAccountReq() *GetCrossMarginAccountReq {
	this := GetCrossMarginAccountReq{}
	var quoteCurrency string = "USDT"
	this.QuoteCurrency = &quoteCurrency
	var queryType string = "MARGIN"
	this.QueryType = &queryType
	return &this
}

// NewGetCrossMarginAccountReqWithDefaults instantiates a new GetCrossMarginAccountReq object
// This constructor will only assign default values to properties that have it defined,
func NewGetCrossMarginAccountReqWithDefaults() *GetCrossMarginAccountReq {
	this := GetCrossMarginAccountReq{}
	var quoteCurrency string = "USDT"
	this.QuoteCurrency = &quoteCurrency
	var queryType string = "MARGIN"
	this.QueryType = &queryType
	return &this
}

func (o *GetCrossMarginAccountReq) ToMap() map[string]interface{} {
	toSerialize := map[string]interface{}{}
	toSerialize["quoteCurrency"] = o.QuoteCurrency
	toSerialize["queryType"] = o.QueryType
	return toSerialize
}

type GetCrossMarginAccountReqBuilder struct {
	obj *GetCrossMarginAccountReq
}

func NewGetCrossMarginAccountReqBuilder() *GetCrossMarginAccountReqBuilder {
	return &GetCrossMarginAccountReqBuilder{obj: NewGetCrossMarginAccountReqWithDefaults()}
}

// quote currency, currently only supports USDT, KCS, BTC, USDT as default
func (builder *GetCrossMarginAccountReqBuilder) SetQuoteCurrency(value string) *GetCrossMarginAccountReqBuilder {
	builder.obj.QuoteCurrency = &value
	return builder
}

// Query account type (default MARGIN), MARGIN - only query low frequency cross margin account, MARGIN_V2-only query high frequency cross margin account, ALL - consistent aggregate query with the web side
func (builder *GetCrossMarginAccountReqBuilder) SetQueryType(value string) *GetCrossMarginAccountReqBuilder {
	builder.obj.QueryType = &value
	return builder
}

func (builder *GetCrossMarginAccountReqBuilder) Build() *GetCrossMarginAccountReq {
	return builder.obj
}
