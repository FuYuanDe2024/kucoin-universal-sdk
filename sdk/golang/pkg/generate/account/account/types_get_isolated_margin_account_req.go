// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

package account

// GetIsolatedMarginAccountReq struct for GetIsolatedMarginAccountReq
type GetIsolatedMarginAccountReq struct {
	// For isolated trading pairs, query all without passing
	Symbol *string `json:"symbol,omitempty" url:"symbol,omitempty"`
	// quote currency, currently only supports USDT, KCS, BTC, USDT as default
	QuoteCurrency *string `json:"quoteCurrency,omitempty" url:"quoteCurrency,omitempty"`
	// Query account type (default ISOLATED), ISOLATED- - only query low frequency isolated margin account, ISOLATED_V2-only query high frequency isolated margin account, ALL - consistent aggregate query with the web side
	QueryType *string `json:"queryType,omitempty" url:"queryType,omitempty"`
}

// NewGetIsolatedMarginAccountReq instantiates a new GetIsolatedMarginAccountReq object
// This constructor will assign default values to properties that have it defined
func NewGetIsolatedMarginAccountReq() *GetIsolatedMarginAccountReq {
	this := GetIsolatedMarginAccountReq{}
	var quoteCurrency string = "USDT"
	this.QuoteCurrency = &quoteCurrency
	var queryType string = "ISOLATED"
	this.QueryType = &queryType
	return &this
}

// NewGetIsolatedMarginAccountReqWithDefaults instantiates a new GetIsolatedMarginAccountReq object
// This constructor will only assign default values to properties that have it defined,
func NewGetIsolatedMarginAccountReqWithDefaults() *GetIsolatedMarginAccountReq {
	this := GetIsolatedMarginAccountReq{}
	var quoteCurrency string = "USDT"
	this.QuoteCurrency = &quoteCurrency
	var queryType string = "ISOLATED"
	this.QueryType = &queryType
	return &this
}

func (o *GetIsolatedMarginAccountReq) ToMap() map[string]interface{} {
	toSerialize := map[string]interface{}{}
	toSerialize["symbol"] = o.Symbol
	toSerialize["quoteCurrency"] = o.QuoteCurrency
	toSerialize["queryType"] = o.QueryType
	return toSerialize
}

type GetIsolatedMarginAccountReqBuilder struct {
	obj *GetIsolatedMarginAccountReq
}

func NewGetIsolatedMarginAccountReqBuilder() *GetIsolatedMarginAccountReqBuilder {
	return &GetIsolatedMarginAccountReqBuilder{obj: NewGetIsolatedMarginAccountReqWithDefaults()}
}

// For isolated trading pairs, query all without passing
func (builder *GetIsolatedMarginAccountReqBuilder) SetSymbol(value string) *GetIsolatedMarginAccountReqBuilder {
	builder.obj.Symbol = &value
	return builder
}

// quote currency, currently only supports USDT, KCS, BTC, USDT as default
func (builder *GetIsolatedMarginAccountReqBuilder) SetQuoteCurrency(value string) *GetIsolatedMarginAccountReqBuilder {
	builder.obj.QuoteCurrency = &value
	return builder
}

// Query account type (default ISOLATED), ISOLATED- - only query low frequency isolated margin account, ISOLATED_V2-only query high frequency isolated margin account, ALL - consistent aggregate query with the web side
func (builder *GetIsolatedMarginAccountReqBuilder) SetQueryType(value string) *GetIsolatedMarginAccountReqBuilder {
	builder.obj.QueryType = &value
	return builder
}

func (builder *GetIsolatedMarginAccountReqBuilder) Build() *GetIsolatedMarginAccountReq {
	return builder.obj
}
