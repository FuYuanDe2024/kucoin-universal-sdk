// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

package deposit

// AddDepositAddressV1Req struct for AddDepositAddressV1Req
type AddDepositAddressV1Req struct {
	// currency
	Currency string `json:"currency,omitempty"`
	// The chainId of currency, e.g. The available value for USDT are OMNI, ERC20, TRC20, default is ERC20. The available value for BTC are Native, Segwit, TRC20, the parameters are bech32, btc, trx, default is Native. This only apply for multi-chain currency, and there is no need for single chain currency.
	Chain *string `json:"chain,omitempty"`
}

// NewAddDepositAddressV1Req instantiates a new AddDepositAddressV1Req object
// This constructor will assign default values to properties that have it defined
func NewAddDepositAddressV1Req(currency string) *AddDepositAddressV1Req {
	this := AddDepositAddressV1Req{}
	this.Currency = currency
	var chain string = "eth"
	this.Chain = &chain
	return &this
}

// NewAddDepositAddressV1ReqWithDefaults instantiates a new AddDepositAddressV1Req object
// This constructor will only assign default values to properties that have it defined,
func NewAddDepositAddressV1ReqWithDefaults() *AddDepositAddressV1Req {
	this := AddDepositAddressV1Req{}
	var chain string = "eth"
	this.Chain = &chain
	return &this
}

func (o *AddDepositAddressV1Req) ToMap() map[string]interface{} {
	toSerialize := map[string]interface{}{}
	toSerialize["currency"] = o.Currency
	toSerialize["chain"] = o.Chain
	return toSerialize
}

type AddDepositAddressV1ReqBuilder struct {
	obj *AddDepositAddressV1Req
}

func NewAddDepositAddressV1ReqBuilder() *AddDepositAddressV1ReqBuilder {
	return &AddDepositAddressV1ReqBuilder{obj: NewAddDepositAddressV1ReqWithDefaults()}
}

// currency
func (builder *AddDepositAddressV1ReqBuilder) SetCurrency(value string) *AddDepositAddressV1ReqBuilder {
	builder.obj.Currency = value
	return builder
}

// The chainId of currency, e.g. The available value for USDT are OMNI, ERC20, TRC20, default is ERC20. The available value for BTC are Native, Segwit, TRC20, the parameters are bech32, btc, trx, default is Native. This only apply for multi-chain currency, and there is no need for single chain currency.
func (builder *AddDepositAddressV1ReqBuilder) SetChain(value string) *AddDepositAddressV1ReqBuilder {
	builder.obj.Chain = &value
	return builder
}

func (builder *AddDepositAddressV1ReqBuilder) Build() *AddDepositAddressV1Req {
	return builder.obj
}
