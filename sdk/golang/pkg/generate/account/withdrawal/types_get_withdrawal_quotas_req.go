// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

package withdrawal

// GetWithdrawalQuotasReq struct for GetWithdrawalQuotasReq
type GetWithdrawalQuotasReq struct {
	// currency
	Currency *string `json:"currency,omitempty" url:"currency,omitempty"`
	// The chainId of currency, e.g. The available value for USDT are OMNI, ERC20, TRC20, default is ERC20. The available value for BTC are Native, Segwit, TRC20, the parameters are bech32, btc, trx, default is Native. This only apply for multi-chain currency, and there is no need for single chain currency.
	Chain *string `json:"chain,omitempty" url:"chain,omitempty"`
}

// NewGetWithdrawalQuotasReq instantiates a new GetWithdrawalQuotasReq object
// This constructor will assign default values to properties that have it defined
func NewGetWithdrawalQuotasReq() *GetWithdrawalQuotasReq {
	this := GetWithdrawalQuotasReq{}
	var chain string = "eth"
	this.Chain = &chain
	return &this
}

// NewGetWithdrawalQuotasReqWithDefaults instantiates a new GetWithdrawalQuotasReq object
// This constructor will only assign default values to properties that have it defined,
func NewGetWithdrawalQuotasReqWithDefaults() *GetWithdrawalQuotasReq {
	this := GetWithdrawalQuotasReq{}
	var chain string = "eth"
	this.Chain = &chain
	return &this
}

func (o *GetWithdrawalQuotasReq) ToMap() map[string]interface{} {
	toSerialize := map[string]interface{}{}
	toSerialize["currency"] = o.Currency
	toSerialize["chain"] = o.Chain
	return toSerialize
}

type GetWithdrawalQuotasReqBuilder struct {
	obj *GetWithdrawalQuotasReq
}

func NewGetWithdrawalQuotasReqBuilder() *GetWithdrawalQuotasReqBuilder {
	return &GetWithdrawalQuotasReqBuilder{obj: NewGetWithdrawalQuotasReqWithDefaults()}
}

// currency
func (builder *GetWithdrawalQuotasReqBuilder) SetCurrency(value string) *GetWithdrawalQuotasReqBuilder {
	builder.obj.Currency = &value
	return builder
}

// The chainId of currency, e.g. The available value for USDT are OMNI, ERC20, TRC20, default is ERC20. The available value for BTC are Native, Segwit, TRC20, the parameters are bech32, btc, trx, default is Native. This only apply for multi-chain currency, and there is no need for single chain currency.
func (builder *GetWithdrawalQuotasReqBuilder) SetChain(value string) *GetWithdrawalQuotasReqBuilder {
	builder.obj.Chain = &value
	return builder
}

func (builder *GetWithdrawalQuotasReqBuilder) Build() *GetWithdrawalQuotasReq {
	return builder.obj
}
