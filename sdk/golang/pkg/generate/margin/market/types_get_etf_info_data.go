// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

package market

// GetETFInfoData struct for GetETFInfoData
type GetETFInfoData struct {
	// ETF Currency
	Currency string `json:"currency,omitempty"`
	// Net worth
	NetAsset string `json:"netAsset,omitempty"`
	// Target leverage
	TargetLeverage string `json:"targetLeverage,omitempty"`
	// Actual leverage
	ActualLeverage string `json:"actualLeverage,omitempty"`
	// The amount of currency issued
	IssuedSize string `json:"issuedSize,omitempty"`
	// Basket information
	Basket string `json:"basket,omitempty"`
}

// NewGetETFInfoData instantiates a new GetETFInfoData object
// This constructor will assign default values to properties that have it defined
func NewGetETFInfoData(currency string, netAsset string, targetLeverage string, actualLeverage string, issuedSize string, basket string) *GetETFInfoData {
	this := GetETFInfoData{}
	this.Currency = currency
	this.NetAsset = netAsset
	this.TargetLeverage = targetLeverage
	this.ActualLeverage = actualLeverage
	this.IssuedSize = issuedSize
	this.Basket = basket
	return &this
}

// NewGetETFInfoDataWithDefaults instantiates a new GetETFInfoData object
// This constructor will only assign default values to properties that have it defined,
func NewGetETFInfoDataWithDefaults() *GetETFInfoData {
	this := GetETFInfoData{}
	return &this
}

func (o *GetETFInfoData) ToMap() map[string]interface{} {
	toSerialize := map[string]interface{}{}
	toSerialize["currency"] = o.Currency
	toSerialize["netAsset"] = o.NetAsset
	toSerialize["targetLeverage"] = o.TargetLeverage
	toSerialize["actualLeverage"] = o.ActualLeverage
	toSerialize["issuedSize"] = o.IssuedSize
	toSerialize["basket"] = o.Basket
	return toSerialize
}
