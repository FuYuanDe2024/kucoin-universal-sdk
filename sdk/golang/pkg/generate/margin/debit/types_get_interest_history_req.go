// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

package debit

// GetInterestHistoryReq struct for GetInterestHistoryReq
type GetInterestHistoryReq struct {
	// currency
	Currency *string `json:"currency,omitempty" url:"currency,omitempty"`
	// true-isolated, false-cross; default is false
	IsIsolated *bool `json:"isIsolated,omitempty" url:"isIsolated,omitempty"`
	// symbol, mandatory for isolated margin account
	Symbol *string `json:"symbol,omitempty" url:"symbol,omitempty"`
	// The start and end times are not restricted. If the start time is empty or less than 1680278400000, the default value is set to 1680278400000 (April 1, 2023, 00:00:00)
	StartTime *int64 `json:"startTime,omitempty" url:"startTime,omitempty"`
	// End time
	EndTime *int64 `json:"endTime,omitempty" url:"endTime,omitempty"`
	// Current query page, with a starting value of 1. Default:1
	CurrentPage *int32 `json:"currentPage,omitempty" url:"currentPage,omitempty"`
	// Number of results per page. Default is 50, minimum is 10, maximum is 500
	PageSize *int32 `json:"pageSize,omitempty" url:"pageSize,omitempty"`
}

// NewGetInterestHistoryReq instantiates a new GetInterestHistoryReq object
// This constructor will assign default values to properties that have it defined
func NewGetInterestHistoryReq() *GetInterestHistoryReq {
	this := GetInterestHistoryReq{}
	var isIsolated bool = false
	this.IsIsolated = &isIsolated
	var currentPage int32 = 1
	this.CurrentPage = &currentPage
	var pageSize int32 = 50
	this.PageSize = &pageSize
	return &this
}

// NewGetInterestHistoryReqWithDefaults instantiates a new GetInterestHistoryReq object
// This constructor will only assign default values to properties that have it defined,
func NewGetInterestHistoryReqWithDefaults() *GetInterestHistoryReq {
	this := GetInterestHistoryReq{}
	var isIsolated bool = false
	this.IsIsolated = &isIsolated
	var currentPage int32 = 1
	this.CurrentPage = &currentPage
	var pageSize int32 = 50
	this.PageSize = &pageSize
	return &this
}

func (o *GetInterestHistoryReq) ToMap() map[string]interface{} {
	toSerialize := map[string]interface{}{}
	toSerialize["currency"] = o.Currency
	toSerialize["isIsolated"] = o.IsIsolated
	toSerialize["symbol"] = o.Symbol
	toSerialize["startTime"] = o.StartTime
	toSerialize["endTime"] = o.EndTime
	toSerialize["currentPage"] = o.CurrentPage
	toSerialize["pageSize"] = o.PageSize
	return toSerialize
}

type GetInterestHistoryReqBuilder struct {
	obj *GetInterestHistoryReq
}

func NewGetInterestHistoryReqBuilder() *GetInterestHistoryReqBuilder {
	return &GetInterestHistoryReqBuilder{obj: NewGetInterestHistoryReqWithDefaults()}
}

// currency
func (builder *GetInterestHistoryReqBuilder) SetCurrency(value string) *GetInterestHistoryReqBuilder {
	builder.obj.Currency = &value
	return builder
}

// true-isolated, false-cross; default is false
func (builder *GetInterestHistoryReqBuilder) SetIsIsolated(value bool) *GetInterestHistoryReqBuilder {
	builder.obj.IsIsolated = &value
	return builder
}

// symbol, mandatory for isolated margin account
func (builder *GetInterestHistoryReqBuilder) SetSymbol(value string) *GetInterestHistoryReqBuilder {
	builder.obj.Symbol = &value
	return builder
}

// The start and end times are not restricted. If the start time is empty or less than 1680278400000, the default value is set to 1680278400000 (April 1, 2023, 00:00:00)
func (builder *GetInterestHistoryReqBuilder) SetStartTime(value int64) *GetInterestHistoryReqBuilder {
	builder.obj.StartTime = &value
	return builder
}

// End time
func (builder *GetInterestHistoryReqBuilder) SetEndTime(value int64) *GetInterestHistoryReqBuilder {
	builder.obj.EndTime = &value
	return builder
}

// Current query page, with a starting value of 1. Default:1
func (builder *GetInterestHistoryReqBuilder) SetCurrentPage(value int32) *GetInterestHistoryReqBuilder {
	builder.obj.CurrentPage = &value
	return builder
}

// Number of results per page. Default is 50, minimum is 10, maximum is 500
func (builder *GetInterestHistoryReqBuilder) SetPageSize(value int32) *GetInterestHistoryReqBuilder {
	builder.obj.PageSize = &value
	return builder
}

func (builder *GetInterestHistoryReqBuilder) Build() *GetInterestHistoryReq {
	return builder.obj
}
