// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

package futuresprivate

import (
	"encoding/json"
	"github.com/Kucoin/kucoin-universal-sdk/sdk/golang/pkg/types"
)

// MarginModeEvent struct for MarginModeEvent
type MarginModeEvent struct {
	// common response
	CommonResponse *types.WsMessage
	// The SYMBOL is the key with value  \"CROSS\" or \"ISOLATED\"
	SYMBOL string `json:"SYMBOL,omitempty"`
}

// NewMarginModeEvent instantiates a new MarginModeEvent object
// This constructor will assign default values to properties that have it defined
func NewMarginModeEvent(sYMBOL string) *MarginModeEvent {
	this := MarginModeEvent{}
	this.SYMBOL = sYMBOL
	return &this
}

// NewMarginModeEventWithDefaults instantiates a new MarginModeEvent object
// This constructor will only assign default values to properties that have it defined,
func NewMarginModeEventWithDefaults() *MarginModeEvent {
	this := MarginModeEvent{}
	return &this
}

func (o *MarginModeEvent) ToMap() map[string]interface{} {
	toSerialize := map[string]interface{}{}
	toSerialize["SYMBOL"] = o.SYMBOL
	return toSerialize
}

type MarginModeEventCallback func(topic string, subject string, data *MarginModeEvent) error

type MarginModeEventCallbackWrapper struct {
	callback MarginModeEventCallback
}

func (w *MarginModeEventCallbackWrapper) OnMessage(msg *types.WsMessage) error {
	obj := &MarginModeEvent{}
	err := json.Unmarshal(msg.RawData, obj)
	if err != nil {
		return err
	}
	obj.CommonResponse = msg
	return w.callback(msg.Topic, msg.Subject, obj)
}
