// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

package positions

import (
	"github.com/Kucoin/kucoin-universal-sdk/sdk/golang/pkg/types"
)

// AddIsolatedMarginResp struct for AddIsolatedMarginResp
type AddIsolatedMarginResp struct {
	// common response
	CommonResponse *types.RestResponse
	// Position ID
	Id string `json:"id,omitempty"`
	// Symbol of the contract, Please refer to [Get Symbol endpoint: symbol](doc://link/endpoint/3470220)
	Symbol string `json:"symbol,omitempty"`
	// Auto deposit margin or not
	AutoDeposit bool `json:"autoDeposit,omitempty"`
	// Maintenance margin requirement
	MaintMarginReq float32 `json:"maintMarginReq,omitempty"`
	// Risk limit
	RiskLimit int32 `json:"riskLimit,omitempty"`
	// Leverage o the order
	RealLeverage float32 `json:"realLeverage,omitempty"`
	// Cross mode or not
	CrossMode bool `json:"crossMode,omitempty"`
	// ADL ranking percentile
	DelevPercentage float32 `json:"delevPercentage,omitempty"`
	// Open time
	OpeningTimestamp int64 `json:"openingTimestamp,omitempty"`
	// Current timestamp
	CurrentTimestamp int64 `json:"currentTimestamp,omitempty"`
	// Current postion quantity
	CurrentQty int32 `json:"currentQty,omitempty"`
	// Current postion value
	CurrentCost float32 `json:"currentCost,omitempty"`
	// Current commission
	CurrentComm float32 `json:"currentComm,omitempty"`
	// Unrealised value
	UnrealisedCost float32 `json:"unrealisedCost,omitempty"`
	// Accumulated realised gross profit value
	RealisedGrossCost float32 `json:"realisedGrossCost,omitempty"`
	// Current realised position value
	RealisedCost float32 `json:"realisedCost,omitempty"`
	// Opened position or not
	IsOpen bool `json:"isOpen,omitempty"`
	// Mark price
	MarkPrice float32 `json:"markPrice,omitempty"`
	// Mark value
	MarkValue float32 `json:"markValue,omitempty"`
	// Position value
	PosCost float32 `json:"posCost,omitempty"`
	// added margin
	PosCross float32 `json:"posCross,omitempty"`
	// Leverage margin
	PosInit float32 `json:"posInit,omitempty"`
	// Bankruptcy cost
	PosComm float32 `json:"posComm,omitempty"`
	// Funding fees paid out
	PosLoss float32 `json:"posLoss,omitempty"`
	// Position margin
	PosMargin float32 `json:"posMargin,omitempty"`
	// Maintenance margin
	PosMaint float32 `json:"posMaint,omitempty"`
	// Position margin
	MaintMargin float32 `json:"maintMargin,omitempty"`
	// Accumulated realised gross profit value
	RealisedGrossPnl float32 `json:"realisedGrossPnl,omitempty"`
	// Realised profit and loss
	RealisedPnl float32 `json:"realisedPnl,omitempty"`
	// Unrealised profit and loss
	UnrealisedPnl float32 `json:"unrealisedPnl,omitempty"`
	// Profit-loss ratio of the position
	UnrealisedPnlPcnt float32 `json:"unrealisedPnlPcnt,omitempty"`
	// Rate of return on investment
	UnrealisedRoePcnt float32 `json:"unrealisedRoePcnt,omitempty"`
	// Average entry price
	AvgEntryPrice float32 `json:"avgEntryPrice,omitempty"`
	// Liquidation price
	LiquidationPrice float32 `json:"liquidationPrice,omitempty"`
	// Bankruptcy price
	BankruptPrice float32 `json:"bankruptPrice,omitempty"`
	// userId
	UserId int32 `json:"userId,omitempty"`
	// Currency used to clear and settle the trades
	SettleCurrency string `json:"settleCurrency,omitempty"`
}

// NewAddIsolatedMarginResp instantiates a new AddIsolatedMarginResp object
// This constructor will assign default values to properties that have it defined
func NewAddIsolatedMarginResp(id string, symbol string, autoDeposit bool, maintMarginReq float32, riskLimit int32, realLeverage float32, crossMode bool, delevPercentage float32, openingTimestamp int64, currentTimestamp int64, currentQty int32, currentCost float32, currentComm float32, unrealisedCost float32, realisedGrossCost float32, realisedCost float32, isOpen bool, markPrice float32, markValue float32, posCost float32, posCross float32, posInit float32, posComm float32, posLoss float32, posMargin float32, posMaint float32, maintMargin float32, realisedGrossPnl float32, realisedPnl float32, unrealisedPnl float32, unrealisedPnlPcnt float32, unrealisedRoePcnt float32, avgEntryPrice float32, liquidationPrice float32, bankruptPrice float32, userId int32, settleCurrency string) *AddIsolatedMarginResp {
	this := AddIsolatedMarginResp{}
	this.Id = id
	this.Symbol = symbol
	this.AutoDeposit = autoDeposit
	this.MaintMarginReq = maintMarginReq
	this.RiskLimit = riskLimit
	this.RealLeverage = realLeverage
	this.CrossMode = crossMode
	this.DelevPercentage = delevPercentage
	this.OpeningTimestamp = openingTimestamp
	this.CurrentTimestamp = currentTimestamp
	this.CurrentQty = currentQty
	this.CurrentCost = currentCost
	this.CurrentComm = currentComm
	this.UnrealisedCost = unrealisedCost
	this.RealisedGrossCost = realisedGrossCost
	this.RealisedCost = realisedCost
	this.IsOpen = isOpen
	this.MarkPrice = markPrice
	this.MarkValue = markValue
	this.PosCost = posCost
	this.PosCross = posCross
	this.PosInit = posInit
	this.PosComm = posComm
	this.PosLoss = posLoss
	this.PosMargin = posMargin
	this.PosMaint = posMaint
	this.MaintMargin = maintMargin
	this.RealisedGrossPnl = realisedGrossPnl
	this.RealisedPnl = realisedPnl
	this.UnrealisedPnl = unrealisedPnl
	this.UnrealisedPnlPcnt = unrealisedPnlPcnt
	this.UnrealisedRoePcnt = unrealisedRoePcnt
	this.AvgEntryPrice = avgEntryPrice
	this.LiquidationPrice = liquidationPrice
	this.BankruptPrice = bankruptPrice
	this.UserId = userId
	this.SettleCurrency = settleCurrency
	return &this
}

// NewAddIsolatedMarginRespWithDefaults instantiates a new AddIsolatedMarginResp object
// This constructor will only assign default values to properties that have it defined,
func NewAddIsolatedMarginRespWithDefaults() *AddIsolatedMarginResp {
	this := AddIsolatedMarginResp{}
	return &this
}

func (o *AddIsolatedMarginResp) ToMap() map[string]interface{} {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["symbol"] = o.Symbol
	toSerialize["autoDeposit"] = o.AutoDeposit
	toSerialize["maintMarginReq"] = o.MaintMarginReq
	toSerialize["riskLimit"] = o.RiskLimit
	toSerialize["realLeverage"] = o.RealLeverage
	toSerialize["crossMode"] = o.CrossMode
	toSerialize["delevPercentage"] = o.DelevPercentage
	toSerialize["openingTimestamp"] = o.OpeningTimestamp
	toSerialize["currentTimestamp"] = o.CurrentTimestamp
	toSerialize["currentQty"] = o.CurrentQty
	toSerialize["currentCost"] = o.CurrentCost
	toSerialize["currentComm"] = o.CurrentComm
	toSerialize["unrealisedCost"] = o.UnrealisedCost
	toSerialize["realisedGrossCost"] = o.RealisedGrossCost
	toSerialize["realisedCost"] = o.RealisedCost
	toSerialize["isOpen"] = o.IsOpen
	toSerialize["markPrice"] = o.MarkPrice
	toSerialize["markValue"] = o.MarkValue
	toSerialize["posCost"] = o.PosCost
	toSerialize["posCross"] = o.PosCross
	toSerialize["posInit"] = o.PosInit
	toSerialize["posComm"] = o.PosComm
	toSerialize["posLoss"] = o.PosLoss
	toSerialize["posMargin"] = o.PosMargin
	toSerialize["posMaint"] = o.PosMaint
	toSerialize["maintMargin"] = o.MaintMargin
	toSerialize["realisedGrossPnl"] = o.RealisedGrossPnl
	toSerialize["realisedPnl"] = o.RealisedPnl
	toSerialize["unrealisedPnl"] = o.UnrealisedPnl
	toSerialize["unrealisedPnlPcnt"] = o.UnrealisedPnlPcnt
	toSerialize["unrealisedRoePcnt"] = o.UnrealisedRoePcnt
	toSerialize["avgEntryPrice"] = o.AvgEntryPrice
	toSerialize["liquidationPrice"] = o.LiquidationPrice
	toSerialize["bankruptPrice"] = o.BankruptPrice
	toSerialize["userId"] = o.UserId
	toSerialize["settleCurrency"] = o.SettleCurrency
	return toSerialize
}

func (o *AddIsolatedMarginResp) SetCommonResponse(response *types.RestResponse) {
	o.CommonResponse = response
}
