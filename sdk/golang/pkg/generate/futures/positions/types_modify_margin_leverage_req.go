// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

package positions

// ModifyMarginLeverageReq struct for ModifyMarginLeverageReq
type ModifyMarginLeverageReq struct {
	// Symbol of the contract, Please refer to [Get Symbol endpoint: symbol](https://www.kucoin.com/docs-new/api-3470220)
	Symbol string `json:"symbol,omitempty"`
	// Leverage multiple
	Leverage string `json:"leverage,omitempty"`
}

// NewModifyMarginLeverageReq instantiates a new ModifyMarginLeverageReq object
// This constructor will assign default values to properties that have it defined
func NewModifyMarginLeverageReq(symbol string, leverage string) *ModifyMarginLeverageReq {
	this := ModifyMarginLeverageReq{}
	this.Symbol = symbol
	this.Leverage = leverage
	return &this
}

// NewModifyMarginLeverageReqWithDefaults instantiates a new ModifyMarginLeverageReq object
// This constructor will only assign default values to properties that have it defined,
func NewModifyMarginLeverageReqWithDefaults() *ModifyMarginLeverageReq {
	this := ModifyMarginLeverageReq{}
	return &this
}

func (o *ModifyMarginLeverageReq) ToMap() map[string]interface{} {
	toSerialize := map[string]interface{}{}
	toSerialize["symbol"] = o.Symbol
	toSerialize["leverage"] = o.Leverage
	return toSerialize
}

type ModifyMarginLeverageReqBuilder struct {
	obj *ModifyMarginLeverageReq
}

func NewModifyMarginLeverageReqBuilder() *ModifyMarginLeverageReqBuilder {
	return &ModifyMarginLeverageReqBuilder{obj: NewModifyMarginLeverageReqWithDefaults()}
}

// Symbol of the contract, Please refer to [Get Symbol endpoint: symbol](https://www.kucoin.com/docs-new/api-3470220)
func (builder *ModifyMarginLeverageReqBuilder) SetSymbol(value string) *ModifyMarginLeverageReqBuilder {
	builder.obj.Symbol = value
	return builder
}

// Leverage multiple
func (builder *ModifyMarginLeverageReqBuilder) SetLeverage(value string) *ModifyMarginLeverageReqBuilder {
	builder.obj.Leverage = value
	return builder
}

func (builder *ModifyMarginLeverageReqBuilder) Build() *ModifyMarginLeverageReq {
	return builder.obj
}
