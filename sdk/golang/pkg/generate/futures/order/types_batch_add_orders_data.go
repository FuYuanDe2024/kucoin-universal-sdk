// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

package order

// BatchAddOrdersData struct for BatchAddOrdersData
type BatchAddOrdersData struct {
	// The unique order id generated by the trading system,which can be used later for further actions such as canceling the order.
	OrderId string `json:"orderId,omitempty"`
	// Unique order id created by users to identify their orders, the maximum length cannot exceed 40, e.g. UUID, Only allows numbers, characters, underline(_), and separator(-)
	ClientOid string `json:"clientOid,omitempty"`
	// Symbol of the contract, Please refer to [Get Symbol endpoint: symbol](doc://link/endpoint/3470220)
	Symbol string `json:"symbol,omitempty"`
	Code   string `json:"code,omitempty"`
	Msg    string `json:"msg,omitempty"`
}

// NewBatchAddOrdersData instantiates a new BatchAddOrdersData object
// This constructor will assign default values to properties that have it defined
func NewBatchAddOrdersData(orderId string, clientOid string, symbol string, code string, msg string) *BatchAddOrdersData {
	this := BatchAddOrdersData{}
	this.OrderId = orderId
	this.ClientOid = clientOid
	this.Symbol = symbol
	this.Code = code
	this.Msg = msg
	return &this
}

// NewBatchAddOrdersDataWithDefaults instantiates a new BatchAddOrdersData object
// This constructor will only assign default values to properties that have it defined,
func NewBatchAddOrdersDataWithDefaults() *BatchAddOrdersData {
	this := BatchAddOrdersData{}
	return &this
}

func (o *BatchAddOrdersData) ToMap() map[string]interface{} {
	toSerialize := map[string]interface{}{}
	toSerialize["orderId"] = o.OrderId
	toSerialize["clientOid"] = o.ClientOid
	toSerialize["symbol"] = o.Symbol
	toSerialize["code"] = o.Code
	toSerialize["msg"] = o.Msg
	return toSerialize
}
