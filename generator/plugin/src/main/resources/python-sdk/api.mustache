{{>partial_header}}
from abc import ABC, abstractmethod
from typing import Any
from kucoin_universal_sdk.internal.interfaces.transport import Transport
{{#imports}}
{{.}}
{{/imports}}

class {{classname}}(ABC):
{{#operations}}
{{#operation}}

    @abstractmethod{{#isDeprecated}}
    @deprecated(''){{/isDeprecated}}
    def {{vendorExtensions.x-meta.method}}(self{{#hasParams}}, req :{{vendorExtensions.x-meta.methodServiceFmt}}Req{{/hasParams}}, **kwargs: Any) -> {{vendorExtensions.x-meta.methodServiceFmt}}Resp:
        """
        summary: {{summary}}
        description: {{notes}}
        documentation: {{vendorExtensions.x-api-doc}}
{{#vendorExtensions.x-extra-comment}}
        {{.}}
{{/vendorExtensions.x-extra-comment}}
        """
        pass
{{/operation}}
{{/operations}}

class {{classname}}Impl({{classname}}):
    def __init__{{api_entry_name}}(self, transport :Transport):
        self.transport = transport
{{#operations}}
    {{#operation}}

    def {{vendorExtensions.x-meta.method}}(self{{#hasParams}}, req :{{vendorExtensions.x-meta.methodServiceFmt}}Req{{/hasParams}}, **kwargs: Any) -> {{vendorExtensions.x-meta.methodServiceFmt}}Resp:
        return self.transport.call("{{vendorExtensions.x-meta.domain}}", {{#vendorExtensions.x-meta.broker}}True{{/vendorExtensions.x-meta.broker}}{{^vendorExtensions.x-meta.broker}}False{{/vendorExtensions.x-meta.broker}},"{{httpMethod}}", "{{path}}", {{#hasParams}}req{{/hasParams}}{{^hasParams}}None{{/hasParams}}, {{vendorExtensions.x-meta.methodServiceFmt}}Resp(), {{#vendorExtensions.x-request-force-json}}True{{/vendorExtensions.x-request-force-json}}{{^vendorExtensions.x-request-force-json}}False{{/vendorExtensions.x-request-force-json}}, **kwargs)
    {{/operation}}
{{/operations}}
