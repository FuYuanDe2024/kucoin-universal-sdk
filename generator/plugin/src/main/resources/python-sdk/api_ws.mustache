{{>partial_header}}
from abc import ABC, abstractmethod
from kucoin_universal_sdk.internal.interfaces.websocket import WebSocketService
{{#imports}}
{{.}}
{{/imports}}

class {{classname}}(ABC):
{{#operations}}
{{#operation}}

    @abstractmethod
    def {{vendorExtensions.x-meta.method}}(self, {{#vendorExtensions.x-meta.otherProperties}}{{#parameters}}{{#type}}{{#type.simple}}{{paras}} :str,{{/type.simple}}{{#type.array}}{{paras}} :List[str],{{/type.array}}{{#type.object}}{{#paras}}{{.}} :str,{{/paras}}{{/type.object}}{{/type}}{{/parameters}}{{/vendorExtensions.x-meta.otherProperties}}callback :{{vendorExtensions.x-meta.methodServiceFmt}}EventCallback) -> str:
        """
        summary: {{summary}}
        description: {{notes}}
        push frequency: {{vendorExtensions.x-push_frequency}}
        """
        pass
{{/operation}}
{{/operations}}

    @abstractmethod
    def unsubscribe(self, id :str):
        pass

    @abstractmethod
    def start(self):
        pass

    @abstractmethod
    def stop(self):
        pass

class {{classname}}Impl({{classname}}):
    def __init__{{api_entry_name}}(self, transport :WebSocketService):
        self.transport = transport
{{#operations}}
    {{#operation}}

    def {{vendorExtensions.x-meta.method}}{{operationName}}(self, {{#vendorExtensions.x-meta.otherProperties}}{{#parameters}}{{#type}}{{#type.simple}}{{paras}} :str,{{/type.simple}}{{#type.array}}{{paras}} :List[str],{{/type.array}}{{#type.object}}{{#paras}}{{.}} :str,{{/paras}}{{/type.object}}{{/type}}{{/parameters}}{{/vendorExtensions.x-meta.otherProperties}}callback :{{vendorExtensions.x-meta.methodServiceFmt}}EventCallback) -> str:
        topic_prefix = "{{vendorExtensions.x-meta.otherProperties.topic}}"
        {{#vendorExtensions.x-meta.otherProperties}}{{#parameters}}{{#type}}
        {{#type.none}}args = []{{/type.none}}
        {{#type.simple}}args = [ {{#paras}}{{.}}{{/paras}} ]{{/type.simple}}
        {{#type.array}}args = {{paras}}{{/type.array}}
        {{#type.object}}args = ["_".join([{{#paras}}{{.}},{{/paras}}])]{{/type.object}}
        {{/type}}{{/parameters}}{{/vendorExtensions.x-meta.otherProperties}}
        return self.transport.subscribe(topic_prefix,  args, {{vendorExtensions.x-meta.methodServiceFmt}}EventCallbackWrapper(callback))
    {{/operation}}
{{/operations}}

    def unsubscribe(self, id :str):
        self.transport.unsubscribe(id)

    def start(self):
        self.transport.start()

    def stop(self):
        self.transport.stop()


