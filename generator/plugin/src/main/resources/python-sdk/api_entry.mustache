{{>partial_header}}
from abc import ABC, abstractmethod
from kucoin_universal_sdk.internal.interfaces.transport import Transport
{{#api_entry}}
{{#imports}}
{{.}}
{{/imports}}

class {{api_entry_name}}(ABC):
{{#api_entry_value}}

    @abstractmethod
    def get_{{method}}_api(self) -> {{target_service}}:
        """
        get {{target_service}}
        """
        pass
{{/api_entry_value}}


class {{api_entry_name}}Impl({{api_entry_name}}):
    def __init__(self, transport {{^WS_MODE}}:Transport{{/WS_MODE}}{{#WS_MODE}}interfaces.WebSocketService{{/WS_MODE}}):
        self.transport = transport
        {{#api_entry_value}}
        self.{{method}} = {{target_service}}Impl(transport)
        {{/api_entry_value}}
{{#api_entry_value}}

    def get_{{method}}_api(self) -> {{target_service}}{{api_entry_suffix}}:
        return self.{{method}}
{{/api_entry_value}}
{{/api_entry}}



