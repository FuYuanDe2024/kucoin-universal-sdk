{{>partial_header}}
package {{packageName}}

import (
    "context"
    "github.com/Kucoin/kucoin-universal-sdk/sdk/golang/internal/interfaces"
)

type {{classname}} interface {

{{#operations}}
    {{#operation}}

        // {{vendorExtensions.x-meta.method}} {{summary}}
        // Description: {{notes}}
        // Documentation: {{vendorExtensions.x-api-doc}}
        {{#vendorExtensions.x-extra-comment}}
        // {{.}}
        {{/vendorExtensions.x-extra-comment}}{{#isDeprecated}} // Deprecated
        {{/isDeprecated}}
        {{vendorExtensions.x-meta.method}}({{#hasParams}}req *{{vendorExtensions.x-meta.methodServiceFmt}}Req, ctx context.Context{{/hasParams}}{{^hasParams}}ctx context.Context{{/hasParams}}) (*{{vendorExtensions.x-meta.methodServiceFmt}}Resp, error)
    {{/operation}}
{{/operations}}
}


type {{classname}}Impl struct {
transport interfaces.Transport
}

func New{{classname}}Imp(transport interfaces.Transport) *{{classname}}Impl {
return &{{classname}}Impl{transport : transport}
}
{{#operations}}
    {{#operation}}

        func (impl *{{classname}}Impl){{vendorExtensions.x-meta.methodServiceFmt}}({{#hasParams}}req *{{vendorExtensions.x-meta.methodServiceFmt}}Req, ctx context.Context{{/hasParams}}{{^hasParams}}ctx context.Context{{/hasParams}}) (*{{vendorExtensions.x-meta.methodServiceFmt}}Resp, error) {
        resp := &{{vendorExtensions.x-meta.methodServiceFmt}}Resp{}
        err := impl.transport.Call(ctx, "{{vendorExtensions.x-meta.domain}}", {{vendorExtensions.x-meta.broker}}, "{{httpMethod}}", "{{path}}", {{#hasParams}}req{{/hasParams}}{{^hasParams}}nil{{/hasParams}}, resp, {{#vendorExtensions.x-request-force-json}}true{{/vendorExtensions.x-request-force-json}}{{^vendorExtensions.x-request-force-json}}false{{/vendorExtensions.x-request-force-json}})
        return resp, err
        }
    {{/operation}}
{{/operations}}